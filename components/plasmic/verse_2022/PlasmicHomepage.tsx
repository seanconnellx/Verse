// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 2zRvKQ8amGcEx1ePi9rEYj
// Component: FJjty3vjLw
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import SectionMarketingHeadline from "../../SectionMarketingHeadline"; // plasmic-import: giex4on_Lm/component
import Navigation from "../../Navigation"; // plasmic-import: rwLMYuTNcvI/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: mcJp7ONmJp/component
import OrderListItem from "../../OrderListItem"; // plasmic-import: uB-_kQ49w8/component
import OrderListStacked from "../../OrderListStacked"; // plasmic-import: 1mCYak1j0G/component

import { useScreenVariants as useScreenVariantsdDkTz4I3Sm } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: dDKTz_4I3sm/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_verse_2022.module.css"; // plasmic-import: 2zRvKQ8amGcEx1ePi9rEYj/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: FJjty3vjLw/css

import IconArrow3Icon from "./icons/PlasmicIcon__IconArrow3"; // plasmic-import: F0QCtJOEPL3/icon
import IconArrow2Icon from "./icons/PlasmicIcon__IconArrow2"; // plasmic-import: WfhCAK0v-AX/icon
import IconArrowIcon from "./icons/PlasmicIcon__IconArrow"; // plasmic-import: zPjSUWbIRQf/icon
import PawprintIcon from "./icons/PlasmicIcon__Pawprint"; // plasmic-import: D_WwBZK_3B/icon
import Layer1Icon from "./icons/PlasmicIcon__Layer1"; // plasmic-import: 4N1OAASE6f/icon
import NhsIcon from "./icons/PlasmicIcon__Nhs"; // plasmic-import: xgz7RwZ25i/icon
import Pawprint2Icon from "./icons/PlasmicIcon__Pawprint2"; // plasmic-import: BiFyenkeXhG/icon
import DawnPrimary32PxImageIcon from "./icons/PlasmicIcon__DawnPrimary32PxImage"; // plasmic-import: q47BNl2pHMP/icon
import Vector5Icon from "./icons/PlasmicIcon__Vector5"; // plasmic-import: KsJVMyrFhUwO/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  stage?: p.Flex<"div">;
  sectionMarketingHeadline?: p.Flex<typeof SectionMarketingHeadline>;
  navigation?: p.Flex<typeof Navigation>;
  headlineAndActions?: p.Flex<"div">;
  headline?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  textHighlight?: p.Flex<"span">;
  actions?: p.Flex<"div">;
  mainServiceAreas?: p.Flex<"div">;
  subline?: p.Flex<"div">;
  rectangle101?: p.Flex<"div">;
  highlyExperiencedIntegratedCapabilitiesAcross?: p.Flex<"div">;
  callsToAction?: p.Flex<"div">;
  arrow5?: p.Flex<"div">;
  introduction?: p.Flex<"div">;
  container?: p.Flex<"div">;
  header?: p.Flex<"div">;
  paragraph?: p.Flex<"div">;
  primaryCta?: p.Flex<"div">;
  label2?: p.Flex<"div">;
  arrow6?: p.Flex<"div">;
  people?: p.Flex<"div">;
  contain?: p.Flex<"div">;
  title?: p.Flex<"div">;
  _44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat?: p.Flex<"div">;
  primaryCta2?: p.Flex<"div">;
  label3?: p.Flex<"div">;
  arrow?: p.Flex<"div">;
  profilePics?: p.Flex<"div">;
  profilesColumn1?: p.Flex<"div">;
  teamItem?: p.Flex<"div">;
  picture?: p.Flex<"div">;
  teamItem2?: p.Flex<"div">;
  picture2?: p.Flex<"div">;
  teamItem3?: p.Flex<"div">;
  picture3?: p.Flex<"div">;
  teamItem4?: p.Flex<"div">;
  picture4?: p.Flex<"div">;
  profileColumn2?: p.Flex<"div">;
  teamItem5?: p.Flex<"div">;
  picture5?: p.Flex<"div">;
  teamItem6?: p.Flex<"div">;
  picture6?: p.Flex<"div">;
  teamItem7?: p.Flex<"div">;
  picture7?: p.Flex<"div">;
  teamItem8?: p.Flex<"div">;
  picture8?: p.Flex<"div">;
  profileColumn3?: p.Flex<"div">;
  teamItem9?: p.Flex<"div">;
  picture9?: p.Flex<"div">;
  teamItem10?: p.Flex<"div">;
  picture10?: p.Flex<"div">;
  teamItem11?: p.Flex<"div">;
  picture11?: p.Flex<"div">;
  teamItem12?: p.Flex<"div">;
  picture12?: p.Flex<"div">;
  profileColumn4?: p.Flex<"div">;
  teamItem13?: p.Flex<"div">;
  picture13?: p.Flex<"div">;
  teamItem14?: p.Flex<"div">;
  picture14?: p.Flex<"div">;
  teamItem15?: p.Flex<"div">;
  picture15?: p.Flex<"div">;
  teamItem16?: p.Flex<"div">;
  picture16?: p.Flex<"div">;
  ourWork?: p.Flex<"div">;
  weCreate?: p.Flex<"div">;
  workList?: p.Flex<"div">;
  listItem?: p.Flex<"div">;
  arrowSmall?: p.Flex<"div">;
  listItem2?: p.Flex<"div">;
  resortsWorldBirmingham?: p.Flex<"div">;
  listItem3?: p.Flex<"div">;
  resortsWorldBirmingham2?: p.Flex<"div">;
  listItem4?: p.Flex<"div">;
  resortsWorldBirmingham3?: p.Flex<"div">;
  listItem5?: p.Flex<"div">;
  resortsWorldBirmingham4?: p.Flex<"div">;
  caseStudies?: p.Flex<"div">;
  caseStudy?: p.Flex<"div">;
  overlay?: p.Flex<"div">;
  stats?: p.Flex<"div">;
  statistics?: p.Flex<"div">;
  label8?: p.Flex<"div">;
  descriptor?: p.Flex<"div">;
  descriptor2?: p.Flex<"div">;
  statistics2?: p.Flex<"div">;
  label9?: p.Flex<"div">;
  descriptor3?: p.Flex<"div">;
  descriptor4?: p.Flex<"div">;
  statistics3?: p.Flex<"div">;
  label10?: p.Flex<"div">;
  descriptor5?: p.Flex<"div">;
  descriptor6?: p.Flex<"div">;
  introduction2?: p.Flex<"div">;
  tags?: p.Flex<"div">;
  tagItem?: p.Flex<"div">;
  label4?: p.Flex<"div">;
  tagItem2?: p.Flex<"div">;
  label5?: p.Flex<"div">;
  tagItem3?: p.Flex<"div">;
  label6?: p.Flex<"div">;
  button?: p.Flex<"div">;
  label7?: p.Flex<"div">;
  moreWorkContact?: p.Flex<"div">;
  frame49?: p.Flex<"div">;
  primaryCta3?: p.Flex<"div">;
  label11?: p.Flex<"div">;
  arrow3?: p.Flex<"div">;
  frame50?: p.Flex<"div">;
  primaryCta4?: p.Flex<"div">;
  label12?: p.Flex<"div">;
  arrow2?: p.Flex<"div">;
  ourCustomers?: p.Flex<"div">;
  introduction3?: p.Flex<"div">;
  logoWall?: p.Flex<"div">;
  lakelandLeisureEstates?: p.Flex<"div">;
  resortsWorld?: p.Flex<"div">;
  introduction4?: p.Flex<"div">;
  container2?: p.Flex<"div">;
  paragraph3?: p.Flex<"div">;
  group57?: p.Flex<"div">;
  contact?: p.Flex<"div">;
  frame42?: p.Flex<"div">;
  teamItem17?: p.Flex<"div">;
  picture17?: p.Flex<"div">;
  frame61?: p.Flex<"div">;
  resortsWorld2?: p.Flex<"div">;
  paragraph2?: p.Flex<"div">;
  group58?: p.Flex<"div">;
  contact2?: p.Flex<"div">;
  frame43?: p.Flex<"div">;
  teamItem18?: p.Flex<"div">;
  picture18?: p.Flex<"div">;
  frame62?: p.Flex<"div">;
  awardsRecognition?: p.Flex<"div">;
  image13?: p.Flex<"div">;
  image151?: p.Flex<"div">;
  image161?: p.Flex<"div">;
  image141?: p.Flex<"div">;
  keyFigures?: p.Flex<"div">;
  row?: p.Flex<"div">;
  statistic?: p.Flex<"div">;
  label13?: p.Flex<"div">;
  descriptor9?: p.Flex<"div">;
  descriptor10?: p.Flex<"div">;
  statistic2?: p.Flex<"div">;
  label14?: p.Flex<"div">;
  descriptor11?: p.Flex<"div">;
  descriptor12?: p.Flex<"div">;
  statistic3?: p.Flex<"div">;
  label15?: p.Flex<"div">;
  descriptor13?: p.Flex<"div">;
  descriptor14?: p.Flex<"div">;
  statistic4?: p.Flex<"div">;
  label16?: p.Flex<"div">;
  descriptor7?: p.Flex<"div">;
  descriptor8?: p.Flex<"div">;
  doGood?: p.Flex<"div">;
  frame52?: p.Flex<"div">;
  image10?: p.Flex<"div">;
  frame54?: p.Flex<"div">;
  column1?: p.Flex<"div">;
  impactProject?: p.Flex<"div">;
  media?: p.Flex<"div">;
  placeholderImage?: p.Flex<"div">;
  dawnPrimary32PxImage?: p.Flex<"div">;
  description?: p.Flex<"div">;
  tags5?: p.Flex<"div">;
  impactProject2?: p.Flex<"div">;
  media2?: p.Flex<"div">;
  placeholderImage2?: p.Flex<"div">;
  dawnPrimary32PxImage2?: p.Flex<"div">;
  description2?: p.Flex<"div">;
  weSupportedRestoringAspen?: p.Flex<"div">;
  tags2?: p.Flex<"div">;
  january2022?: p.Flex<"div">;
  wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers?: p.Flex<"div">;
  column2?: p.Flex<"div">;
  impactProject3?: p.Flex<"div">;
  media3?: p.Flex<"div">;
  placeholderImage3?: p.Flex<"div">;
  dawnPrimary32PxImage3?: p.Flex<"div">;
  description3?: p.Flex<"div">;
  weSupportedRestoringAspen2?: p.Flex<"div">;
  tags3?: p.Flex<"div">;
  scotlandUk?: p.Flex<"div">;
  wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2?: p.Flex<"div">;
  impactProject4?: p.Flex<"div">;
  media4?: p.Flex<"div">;
  placeholderImage4?: p.Flex<"div">;
  dawnPrimary32PxImage4?: p.Flex<"div">;
  description4?: p.Flex<"div">;
  weSupportedRestoringAspen3?: p.Flex<"div">;
  tags4?: p.Flex<"div">;
  scotlandUk2?: p.Flex<"div">;
  january2023?: p.Flex<"div">;
  keyFigures2?: p.Flex<"div">;
  row2?: p.Flex<"div">;
  statistic5?: p.Flex<"div">;
  label17?: p.Flex<"div">;
  descriptor15?: p.Flex<"div">;
  descriptor16?: p.Flex<"div">;
  statistic6?: p.Flex<"div">;
  label18?: p.Flex<"div">;
  descriptor17?: p.Flex<"div">;
  descriptor18?: p.Flex<"div">;
  statistic7?: p.Flex<"div">;
  label19?: p.Flex<"div">;
  descriptor19?: p.Flex<"div">;
  descriptor20?: p.Flex<"div">;
  news?: p.Flex<"div">;
  frame55?: p.Flex<"div">;
  newsList?: p.Flex<"div">;
  newsItem?: p.Flex<"div">;
  newsTitle?: p.Flex<"div">;
  info?: p.Flex<"div">;
  author?: p.Flex<"div">;
  rectangle93?: p.Flex<"div">;
  tagItem6?: p.Flex<"div">;
  label20?: p.Flex<"div">;
  newsItem2?: p.Flex<"div">;
  newsTitle2?: p.Flex<"div">;
  info2?: p.Flex<"div">;
  author2?: p.Flex<"div">;
  rectangle94?: p.Flex<"div">;
  tagItem7?: p.Flex<"div">;
  label21?: p.Flex<"div">;
  newsItem3?: p.Flex<"div">;
  newsTitle3?: p.Flex<"div">;
  info3?: p.Flex<"div">;
  author3?: p.Flex<"div">;
  rectangle95?: p.Flex<"div">;
  tagItem8?: p.Flex<"div">;
  label22?: p.Flex<"div">;
  newsItem4?: p.Flex<"div">;
  newsTitle4?: p.Flex<"div">;
  info4?: p.Flex<"div">;
  author4?: p.Flex<"div">;
  rectangle96?: p.Flex<"div">;
  tagItem4?: p.Flex<"div">;
  label23?: p.Flex<"div">;
  newsItem5?: p.Flex<"div">;
  newsTitle5?: p.Flex<"div">;
  info5?: p.Flex<"div">;
  author5?: p.Flex<"div">;
  rectangle97?: p.Flex<"div">;
  tagItem5?: p.Flex<"div">;
  label24?: p.Flex<"div">;
  frame51?: p.Flex<"div">;
  primaryCta5?: p.Flex<"div">;
  label25?: p.Flex<"div">;
  arrow4?: p.Flex<"div">;
  newsletter?: p.Flex<"div">;
  dawnPrimary24PxArrow?: p.Flex<"div">;
  dawnPrimary24PxArrow2?: p.Flex<"div">;
  icon24PxArrow?: p.Flex<"div">;
  frame?: p.Flex<"div">;
  footer?: p.Flex<"div">;
  frame56?: p.Flex<"div">;
  frame57?: p.Flex<"div">;
  frame59?: p.Flex<"div">;
  frame58?: p.Flex<"div">;
  frame60?: p.Flex<"div">;
  frame63?: p.Flex<"div">;
  mainServiceAreas2?: p.Flex<"div">;
  subline6?: p.Flex<"div">;
  rectangle102?: p.Flex<"div">;
  callsToAction2?: p.Flex<"div">;
  linkWall?: p.Flex<"div">;
  divider?: p.Flex<"div">;
  frame48?: p.Flex<"div">;
  frame53?: p.Flex<"div">;
  frame64?: p.Flex<"div">;
  frame65?: p.Flex<"div">;
  influencerManagement?: p.Flex<"div">;
  frame66?: p.Flex<"div">;
  social?: p.Flex<"div">;
  end?: p.Flex<"div">;
  image11?: p.Flex<"div">;
  image12?: p.Flex<"div">;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsdDkTz4I3Sm()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Verse | Rockstar digital acceleration"}</title>
        <meta
          key="og:title"
          property="og:title"
          content={"Verse | Rockstar digital acceleration"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"stage"}
            data-plasmic-override={overrides.stage}
            className={classNames(projectcss.all, sty.stage)}
          >
            <SectionMarketingHeadline
              data-plasmic-name={"sectionMarketingHeadline"}
              data-plasmic-override={overrides.sectionMarketingHeadline}
              className={classNames(
                "__wab_instance",
                sty.sectionMarketingHeadline
              )}
            />

            <Navigation
              data-plasmic-name={"navigation"}
              data-plasmic-override={overrides.navigation}
              className={classNames("__wab_instance", sty.navigation)}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"headlineAndActions"}
              data-plasmic-override={overrides.headlineAndActions}
              hasGap={true}
              className={classNames(projectcss.all, sty.headlineAndActions)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"headline"}
                data-plasmic-override={overrides.headline}
                hasGap={true}
                className={classNames(projectcss.all, sty.headline)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1OiO1
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>
                            {"We help you build\nand  "}
                          </React.Fragment>
                          <span
                            data-plasmic-name={"textHighlight"}
                            data-plasmic-override={overrides.textHighlight}
                            className={classNames(
                              projectcss.all,
                              projectcss.span,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.textHighlight
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "accelerate"
                              : "accelerate"}
                          </span>
                          <React.Fragment>
                            {" your digital business."}
                          </React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>
                            {"We help you build\nand  "}
                          </React.Fragment>
                          <span
                            data-plasmic-name={"textHighlight"}
                            data-plasmic-override={overrides.textHighlight}
                            className={classNames(
                              projectcss.all,
                              projectcss.span,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.textHighlight
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "accelerate"
                              : "accelerate"}
                          </span>
                          <React.Fragment>
                            {" your \ndigital business."}
                          </React.Fragment>
                        </React.Fragment>
                      )}
                    </h1>
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"actions"}
                  data-plasmic-override={overrides.actions}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.actions)}
                >
                  <ButtonPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.buttonPrimary__mo3Hh
                    )}
                    label={"Our work"}
                  />

                  <ButtonPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.buttonPrimary__gAjR
                    )}
                  />
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"mainServiceAreas"}
                data-plasmic-override={overrides.mainServiceAreas}
                hasGap={true}
                className={classNames(projectcss.all, sty.mainServiceAreas)}
              >
                <div
                  data-plasmic-name={"subline"}
                  data-plasmic-override={overrides.subline}
                  className={classNames(projectcss.all, sty.subline)}
                >
                  <div
                    data-plasmic-name={"rectangle101"}
                    data-plasmic-override={overrides.rectangle101}
                    className={classNames(projectcss.all, sty.rectangle101)}
                  />

                  <div
                    data-plasmic-name={
                      "highlyExperiencedIntegratedCapabilitiesAcross"
                    }
                    data-plasmic-override={
                      overrides.highlyExperiencedIntegratedCapabilitiesAcross
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.highlyExperiencedIntegratedCapabilitiesAcross
                    )}
                  >
                    {"Highly experienced, Integrated capabilities across "}
                  </div>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"callsToAction"}
                  data-plasmic-override={overrides.callsToAction}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.callsToAction)}
                >
                  <OrderListItem
                    className={classNames(
                      "__wab_instance",
                      sty.orderListItem___1Km6
                    )}
                  />

                  <OrderListItem
                    className={classNames(
                      "__wab_instance",
                      sty.orderListItem__iQoun
                    )}
                    slot={"Headless Website & Products"}
                  />

                  <OrderListItem
                    className={classNames(
                      "__wab_instance",
                      sty.orderListItem__nIbP2
                    )}
                    slot={"Performance Marketing"}
                  />

                  <OrderListItem
                    className={classNames(
                      "__wab_instance",
                      sty.orderListItem__nAdma
                    )}
                    slot={"Brand, Campaigns & Content"}
                  />
                </p.Stack>
              </p.Stack>
            </p.Stack>

            <div className={classNames(projectcss.all, sty.freeBox__wHwb)}>
              <div
                data-plasmic-name={"arrow5"}
                data-plasmic-override={overrides.arrow5}
                className={classNames(projectcss.all, sty.arrow5)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__rw4PV)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"48px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/verse_2022/images/ellipse7.svg",
                    fullWidth: 48,
                    fullHeight: 48,
                    aspectRatio: 1
                  }}
                />

                <IconArrow3Icon
                  className={classNames(projectcss.all, sty.svg__fwA1X)}
                  role={"img"}
                />
              </div>
            </div>
          </div>

          <div
            data-plasmic-name={"introduction"}
            data-plasmic-override={overrides.introduction}
            className={classNames(projectcss.all, sty.introduction)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"container"}
              data-plasmic-override={overrides.container}
              hasGap={true}
              className={classNames(projectcss.all, sty.container)}
            >
              <div
                data-plasmic-name={"header"}
                data-plasmic-override={overrides.header}
                className={classNames(projectcss.all, sty.header)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qkDyC
                  )}
                >
                  {"Your future, faster."}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jNEh
                  )}
                >
                  {"Your honest, results-driven digital growth partner."}
                </div>
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"paragraph"}
                data-plasmic-override={overrides.paragraph}
                hasGap={true}
                className={classNames(projectcss.all, sty.paragraph)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cvXjd
                  )}
                >
                  {
                    "The driving force of all speeches, we believe that creation should be the point around which any communication strategy revolves.\n\nMore than just an advertising agency, we provide our partners with an interdisciplinary approach that allows us to come up with global solutions and bring them to life.\n\nVerse is a versatile and complementary partner that shares a common goal: to build engagement strategies along with the creative solutions of the future."
                  }
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"primaryCta"}
                  data-plasmic-override={overrides.primaryCta}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.primaryCta)}
                >
                  <div
                    data-plasmic-name={"label2"}
                    data-plasmic-override={overrides.label2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label2
                    )}
                  >
                    {"Our studio"}
                  </div>

                  <div
                    data-plasmic-name={"arrow6"}
                    data-plasmic-override={overrides.arrow6}
                    className={classNames(projectcss.all, sty.arrow6)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___0CvW7)}
                      displayHeight={"32px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"32px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/verse_2022/images/ellipse8.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__oyMfJ)}
                      displayHeight={"14px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"7px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/verse_2022/images/iconArrow4.svg",
                        fullWidth: 7,
                        fullHeight: 14,
                        aspectRatio: 0.5625
                      }}
                    />
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"people"}
            data-plasmic-override={overrides.people}
            hasGap={true}
            className={classNames(projectcss.all, sty.people)}
          >
            <div
              data-plasmic-name={"contain"}
              data-plasmic-override={overrides.contain}
              className={classNames(projectcss.all, sty.contain)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"title"}
                data-plasmic-override={overrides.title}
                hasGap={true}
                className={classNames(projectcss.all, sty.title)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8FF9
                  )}
                >
                  {"We are verse."}
                </div>

                <div
                  data-plasmic-name={
                    "_44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat"
                  }
                  data-plasmic-override={
                    overrides._44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat
                  }
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty._44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat
                  )}
                >
                  {
                    "44 (and growing!) diverse specialists and vibrant personalities together make verse. great. "
                  }
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"primaryCta2"}
                  data-plasmic-override={overrides.primaryCta2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.primaryCta2)}
                >
                  <div
                    data-plasmic-name={"label3"}
                    data-plasmic-override={overrides.label3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label3
                    )}
                  >
                    {"Our team"}
                  </div>

                  <div
                    data-plasmic-name={"arrow"}
                    data-plasmic-override={overrides.arrow}
                    className={classNames(projectcss.all, sty.arrow)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__sJyL)}
                      displayHeight={"32px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"32px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/verse_2022/images/ellipse9.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />

                    <IconArrow2Icon
                      className={classNames(projectcss.all, sty.svg___4JWWj)}
                      role={"img"}
                    />
                  </div>
                </p.Stack>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.freeBox__rlElq)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"profilePics"}
                  data-plasmic-override={overrides.profilePics}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.profilePics)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"profilesColumn1"}
                    data-plasmic-override={overrides.profilesColumn1}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.profilesColumn1)}
                  >
                    <div
                      data-plasmic-name={"teamItem"}
                      data-plasmic-override={overrides.teamItem}
                      className={classNames(projectcss.all, sty.teamItem)}
                    >
                      <div
                        data-plasmic-name={"picture"}
                        data-plasmic-override={overrides.picture}
                        className={classNames(projectcss.all, sty.picture)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem2"}
                      data-plasmic-override={overrides.teamItem2}
                      className={classNames(projectcss.all, sty.teamItem2)}
                    >
                      <div
                        data-plasmic-name={"picture2"}
                        data-plasmic-override={overrides.picture2}
                        className={classNames(projectcss.all, sty.picture2)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem3"}
                      data-plasmic-override={overrides.teamItem3}
                      className={classNames(projectcss.all, sty.teamItem3)}
                    >
                      <div
                        data-plasmic-name={"picture3"}
                        data-plasmic-override={overrides.picture3}
                        className={classNames(projectcss.all, sty.picture3)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem4"}
                      data-plasmic-override={overrides.teamItem4}
                      className={classNames(projectcss.all, sty.teamItem4)}
                    >
                      <div
                        data-plasmic-name={"picture4"}
                        data-plasmic-override={overrides.picture4}
                        className={classNames(projectcss.all, sty.picture4)}
                      />
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"profileColumn2"}
                    data-plasmic-override={overrides.profileColumn2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.profileColumn2)}
                  >
                    <div
                      data-plasmic-name={"teamItem5"}
                      data-plasmic-override={overrides.teamItem5}
                      className={classNames(projectcss.all, sty.teamItem5)}
                    >
                      <div
                        data-plasmic-name={"picture5"}
                        data-plasmic-override={overrides.picture5}
                        className={classNames(projectcss.all, sty.picture5)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem6"}
                      data-plasmic-override={overrides.teamItem6}
                      className={classNames(projectcss.all, sty.teamItem6)}
                    >
                      <div
                        data-plasmic-name={"picture6"}
                        data-plasmic-override={overrides.picture6}
                        className={classNames(projectcss.all, sty.picture6)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem7"}
                      data-plasmic-override={overrides.teamItem7}
                      className={classNames(projectcss.all, sty.teamItem7)}
                    >
                      <div
                        data-plasmic-name={"picture7"}
                        data-plasmic-override={overrides.picture7}
                        className={classNames(projectcss.all, sty.picture7)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem8"}
                      data-plasmic-override={overrides.teamItem8}
                      className={classNames(projectcss.all, sty.teamItem8)}
                    >
                      <div
                        data-plasmic-name={"picture8"}
                        data-plasmic-override={overrides.picture8}
                        className={classNames(projectcss.all, sty.picture8)}
                      />
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"profileColumn3"}
                    data-plasmic-override={overrides.profileColumn3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.profileColumn3)}
                  >
                    <div
                      data-plasmic-name={"teamItem9"}
                      data-plasmic-override={overrides.teamItem9}
                      className={classNames(projectcss.all, sty.teamItem9)}
                    >
                      <div
                        data-plasmic-name={"picture9"}
                        data-plasmic-override={overrides.picture9}
                        className={classNames(projectcss.all, sty.picture9)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem10"}
                      data-plasmic-override={overrides.teamItem10}
                      className={classNames(projectcss.all, sty.teamItem10)}
                    >
                      <div
                        data-plasmic-name={"picture10"}
                        data-plasmic-override={overrides.picture10}
                        className={classNames(projectcss.all, sty.picture10)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem11"}
                      data-plasmic-override={overrides.teamItem11}
                      className={classNames(projectcss.all, sty.teamItem11)}
                    >
                      <div
                        data-plasmic-name={"picture11"}
                        data-plasmic-override={overrides.picture11}
                        className={classNames(projectcss.all, sty.picture11)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem12"}
                      data-plasmic-override={overrides.teamItem12}
                      className={classNames(projectcss.all, sty.teamItem12)}
                    >
                      <div
                        data-plasmic-name={"picture12"}
                        data-plasmic-override={overrides.picture12}
                        className={classNames(projectcss.all, sty.picture12)}
                      />
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"profileColumn4"}
                    data-plasmic-override={overrides.profileColumn4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.profileColumn4)}
                  >
                    <div
                      data-plasmic-name={"teamItem13"}
                      data-plasmic-override={overrides.teamItem13}
                      className={classNames(projectcss.all, sty.teamItem13)}
                    >
                      <div
                        data-plasmic-name={"picture13"}
                        data-plasmic-override={overrides.picture13}
                        className={classNames(projectcss.all, sty.picture13)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem14"}
                      data-plasmic-override={overrides.teamItem14}
                      className={classNames(projectcss.all, sty.teamItem14)}
                    >
                      <div
                        data-plasmic-name={"picture14"}
                        data-plasmic-override={overrides.picture14}
                        className={classNames(projectcss.all, sty.picture14)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem15"}
                      data-plasmic-override={overrides.teamItem15}
                      className={classNames(projectcss.all, sty.teamItem15)}
                    >
                      <div
                        data-plasmic-name={"picture15"}
                        data-plasmic-override={overrides.picture15}
                        className={classNames(projectcss.all, sty.picture15)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"teamItem16"}
                      data-plasmic-override={overrides.teamItem16}
                      className={classNames(projectcss.all, sty.teamItem16)}
                    >
                      <div
                        data-plasmic-name={"picture16"}
                        data-plasmic-override={overrides.picture16}
                        className={classNames(projectcss.all, sty.picture16)}
                      />
                    </div>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          </p.Stack>

          <div
            data-plasmic-name={"ourWork"}
            data-plasmic-override={overrides.ourWork}
            className={classNames(projectcss.all, sty.ourWork)}
          >
            <div
              data-plasmic-name={"weCreate"}
              data-plasmic-override={overrides.weCreate}
              className={classNames(projectcss.all, sty.weCreate)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ggFlt
                )}
              >
                {"We create the remarkable."}
              </div>

              <div
                data-plasmic-name={"workList"}
                data-plasmic-override={overrides.workList}
                className={classNames(projectcss.all, sty.workList)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"listItem"}
                  data-plasmic-override={overrides.listItem}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.listItem)}
                >
                  <div
                    data-plasmic-name={"arrowSmall"}
                    data-plasmic-override={overrides.arrowSmall}
                    className={classNames(projectcss.all, sty.arrowSmall)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__r4Vgt)}
                      displayHeight={"16px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"16px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/verse_2022/images/ellipse10.svg",
                        fullWidth: 16,
                        fullHeight: 16,
                        aspectRatio: 1
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__zz6EB)}
                      displayHeight={"6px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"3px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/verse_2022/images/iconArrow5.svg",
                        fullWidth: 3,
                        fullHeight: 6,
                        aspectRatio: 0.625
                      }}
                    />
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vhwxT
                    )}
                  >
                    {"Resorts World Birmingham"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"listItem2"}
                  data-plasmic-override={overrides.listItem2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.listItem2)}
                >
                  <div
                    data-plasmic-name={"resortsWorldBirmingham"}
                    data-plasmic-override={overrides.resortsWorldBirmingham}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.resortsWorldBirmingham
                    )}
                  >
                    {"Pawprint"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"listItem3"}
                  data-plasmic-override={overrides.listItem3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.listItem3)}
                >
                  <div
                    data-plasmic-name={"resortsWorldBirmingham2"}
                    data-plasmic-override={overrides.resortsWorldBirmingham2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.resortsWorldBirmingham2
                    )}
                  >
                    {"Mitchells & Butlers"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"listItem4"}
                  data-plasmic-override={overrides.listItem4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.listItem4)}
                >
                  <div
                    data-plasmic-name={"resortsWorldBirmingham3"}
                    data-plasmic-override={overrides.resortsWorldBirmingham3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.resortsWorldBirmingham3
                    )}
                  >
                    {"Lakes Leisure Estates"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"listItem5"}
                  data-plasmic-override={overrides.listItem5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.listItem5)}
                >
                  <div
                    data-plasmic-name={"resortsWorldBirmingham4"}
                    data-plasmic-override={overrides.resortsWorldBirmingham4}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.resortsWorldBirmingham4
                    )}
                  >
                    {"Pure Morzine"}
                  </div>
                </p.Stack>
              </div>
            </div>

            <div
              data-plasmic-name={"caseStudies"}
              data-plasmic-override={overrides.caseStudies}
              className={classNames(projectcss.all, sty.caseStudies)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"caseStudy"}
                data-plasmic-override={overrides.caseStudy}
                hasGap={true}
                className={classNames(projectcss.all, sty.caseStudy)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"overlay"}
                  data-plasmic-override={overrides.overlay}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.overlay)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"stats"}
                    data-plasmic-override={overrides.stats}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.stats)}
                  >
                    <div
                      data-plasmic-name={"statistics"}
                      data-plasmic-override={overrides.statistics}
                      className={classNames(projectcss.all, sty.statistics)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__sVxb)}
                        displayHeight={"151px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"152px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/verse_2022/images/outline.svg",
                          fullWidth: 152,
                          fullHeight: 151,
                          aspectRatio: 1.006623
                        }}
                      />

                      <div
                        data-plasmic-name={"label8"}
                        data-plasmic-override={overrides.label8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label8
                        )}
                      >
                        {"25%"}
                      </div>

                      <div
                        data-plasmic-name={"descriptor"}
                        data-plasmic-override={overrides.descriptor}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.descriptor
                        )}
                      >
                        {"increase users"}
                      </div>

                      <div
                        data-plasmic-name={"descriptor2"}
                        data-plasmic-override={overrides.descriptor2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.descriptor2
                        )}
                      >
                        {""}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"statistics2"}
                      data-plasmic-override={overrides.statistics2}
                      className={classNames(projectcss.all, sty.statistics2)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__bklw0)}
                        displayHeight={"151px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"152px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/verse_2022/images/outline2.svg",
                          fullWidth: 152,
                          fullHeight: 151,
                          aspectRatio: 1.006623
                        }}
                      />

                      <div
                        data-plasmic-name={"label9"}
                        data-plasmic-override={overrides.label9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label9
                        )}
                      >
                        {"15%"}
                      </div>

                      <div
                        data-plasmic-name={"descriptor3"}
                        data-plasmic-override={overrides.descriptor3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.descriptor3
                        )}
                      >
                        {"decrease in bounce "}
                      </div>

                      <div
                        data-plasmic-name={"descriptor4"}
                        data-plasmic-override={overrides.descriptor4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.descriptor4
                        )}
                      >
                        {""}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"statistics3"}
                      data-plasmic-override={overrides.statistics3}
                      className={classNames(projectcss.all, sty.statistics3)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__wTnzO)}
                        displayHeight={"151px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"152px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/verse_2022/images/outline3.svg",
                          fullWidth: 152,
                          fullHeight: 151,
                          aspectRatio: 1.006623
                        }}
                      />

                      <div
                        data-plasmic-name={"label10"}
                        data-plasmic-override={overrides.label10}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label10
                        )}
                      >
                        {"20%"}
                      </div>

                      <div
                        data-plasmic-name={"descriptor5"}
                        data-plasmic-override={overrides.descriptor5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.descriptor5
                        )}
                      >
                        {"increase in footfall"}
                      </div>

                      <div
                        data-plasmic-name={"descriptor6"}
                        data-plasmic-override={overrides.descriptor6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.descriptor6
                        )}
                      >
                        {""}
                      </div>
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"introduction2"}
                    data-plasmic-override={overrides.introduction2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.introduction2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4LkDx
                      )}
                    >
                      {"Destination experience like no other."}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__adqMg
                      )}
                    >
                      {"Resorts World Birmingham"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"tags"}
                      data-plasmic-override={overrides.tags}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.tags)}
                    >
                      <div
                        data-plasmic-name={"tagItem"}
                        data-plasmic-override={overrides.tagItem}
                        className={classNames(projectcss.all, sty.tagItem)}
                      >
                        <div
                          data-plasmic-name={"label4"}
                          data-plasmic-override={overrides.label4}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.label4
                          )}
                        >
                          {"Strategy"}
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"tagItem2"}
                        data-plasmic-override={overrides.tagItem2}
                        className={classNames(projectcss.all, sty.tagItem2)}
                      >
                        <div
                          data-plasmic-name={"label5"}
                          data-plasmic-override={overrides.label5}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.label5
                          )}
                        >
                          {"Platform for growth"}
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"tagItem3"}
                        data-plasmic-override={overrides.tagItem3}
                        className={classNames(projectcss.all, sty.tagItem3)}
                      >
                        <div
                          data-plasmic-name={"label6"}
                          data-plasmic-override={overrides.label6}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.label6
                          )}
                        >
                          {"verse.partner"}
                        </div>
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.button)}
                  >
                    <div
                      data-plasmic-name={"label7"}
                      data-plasmic-override={overrides.label7}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label7
                      )}
                    >
                      {"View case study"}
                    </div>

                    <IconArrowIcon
                      className={classNames(projectcss.all, sty.svg__aj9Ym)}
                      role={"img"}
                    />
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </div>
          </div>

          <div
            data-plasmic-name={"moreWorkContact"}
            data-plasmic-override={overrides.moreWorkContact}
            className={classNames(projectcss.all, sty.moreWorkContact)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame49"}
              data-plasmic-override={overrides.frame49}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame49)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"primaryCta3"}
                data-plasmic-override={overrides.primaryCta3}
                hasGap={true}
                className={classNames(projectcss.all, sty.primaryCta3)}
              >
                <div
                  data-plasmic-name={"label11"}
                  data-plasmic-override={overrides.label11}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.label11
                  )}
                >
                  {"More work"}
                </div>

                <div
                  data-plasmic-name={"arrow3"}
                  data-plasmic-override={overrides.arrow3}
                  className={classNames(projectcss.all, sty.arrow3)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__umFcR)}
                    displayHeight={"32px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"32px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/verse_2022/images/ellipse11.svg",
                      fullWidth: 32,
                      fullHeight: 32,
                      aspectRatio: 1
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__rqW5V)}
                    displayHeight={"14px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"7px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/verse_2022/images/iconArrow6.svg",
                      fullWidth: 7,
                      fullHeight: 14,
                      aspectRatio: 0.5625
                    }}
                  />
                </div>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame50"}
              data-plasmic-override={overrides.frame50}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame50)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"primaryCta4"}
                data-plasmic-override={overrides.primaryCta4}
                hasGap={true}
                className={classNames(projectcss.all, sty.primaryCta4)}
              >
                <div
                  data-plasmic-name={"label12"}
                  data-plasmic-override={overrides.label12}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.label12
                  )}
                >
                  {"Chemistry? Lets talk"}
                </div>

                <div
                  data-plasmic-name={"arrow2"}
                  data-plasmic-override={overrides.arrow2}
                  className={classNames(projectcss.all, sty.arrow2)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___8X8BI)}
                    displayHeight={"32px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"32px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/verse_2022/images/ellipse12.svg",
                      fullWidth: 32,
                      fullHeight: 32,
                      aspectRatio: 1
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__znXHa)}
                    displayHeight={"14px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"7px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/verse_2022/images/iconArrow7.svg",
                      fullWidth: 7,
                      fullHeight: 14,
                      aspectRatio: 0.5625
                    }}
                  />
                </div>
              </p.Stack>
            </p.Stack>
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"ourCustomers"}
            data-plasmic-override={overrides.ourCustomers}
            hasGap={true}
            className={classNames(projectcss.all, sty.ourCustomers)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"introduction3"}
              data-plasmic-override={overrides.introduction3}
              hasGap={true}
              className={classNames(projectcss.all, sty.introduction3)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__s4ZiW
                )}
              >
                {"Just some of our wonderful customers."}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__orhdk
                )}
              >
                {
                  "We value a great working relationship with our clients above all else. It’s why many of them have worked with us for years as their trusted partner."
                }
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"logoWall"}
              data-plasmic-override={overrides.logoWall}
              hasGap={true}
              className={classNames(projectcss.all, sty.logoWall)}
            >
              <PawprintIcon
                className={classNames(projectcss.all, sty.svg__cqZg0)}
                role={"img"}
              />

              <div
                data-plasmic-name={"lakelandLeisureEstates"}
                data-plasmic-override={overrides.lakelandLeisureEstates}
                className={classNames(
                  projectcss.all,
                  sty.lakelandLeisureEstates
                )}
              >
                <Layer1Icon
                  className={classNames(projectcss.all, sty.svg__zforb)}
                  role={"img"}
                />
              </div>

              <NhsIcon
                className={classNames(projectcss.all, sty.svg__fgkgp)}
                role={"img"}
              />

              <div
                data-plasmic-name={"resortsWorld"}
                data-plasmic-override={overrides.resortsWorld}
                className={classNames(projectcss.all, sty.resortsWorld)}
              />
            </p.Stack>
          </p.Stack>

          <div
            data-plasmic-name={"introduction4"}
            data-plasmic-override={overrides.introduction4}
            className={classNames(projectcss.all, sty.introduction4)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__eiSDb
              )}
            >
              {"What our customers say."}
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"container2"}
              data-plasmic-override={overrides.container2}
              hasGap={true}
              className={classNames(projectcss.all, sty.container2)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"paragraph3"}
                data-plasmic-override={overrides.paragraph3}
                hasGap={true}
                className={classNames(projectcss.all, sty.paragraph3)}
              >
                <div
                  data-plasmic-name={"group57"}
                  data-plasmic-override={overrides.group57}
                  className={classNames(projectcss.all, sty.group57)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__r8SZj
                    )}
                  >
                    {"“"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nPi6Z
                    )}
                  >
                    {
                      "When we came to verse. with our website project we knew our goal; we needed to ensure our online presence both lived up to and sold the experience in-person and helped users find all the information they needed clearly, but we didn’t have a vision for it yet.\n\nThe team were thorough and knowledgeable, involving all our key stakeholders in the discovery process, and their designs were exactly what we had been hoping for.\n\nThroughout the project no detail (or piece of feedback) went ignored and the end result was a beautiful online presence that works well for our guests and internal team alike. The team have been responsive when anything urgent has come up and are always a pleasure to interact with. We look forward to our continued work with them.”"
                    }
                  </div>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"contact"}
                  data-plasmic-override={overrides.contact}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.contact)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame42"}
                    data-plasmic-override={overrides.frame42}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame42)}
                  >
                    <div
                      data-plasmic-name={"teamItem17"}
                      data-plasmic-override={overrides.teamItem17}
                      className={classNames(projectcss.all, sty.teamItem17)}
                    >
                      <div
                        data-plasmic-name={"picture17"}
                        data-plasmic-override={overrides.picture17}
                        className={classNames(projectcss.all, sty.picture17)}
                      />
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame61"}
                      data-plasmic-override={overrides.frame61}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame61)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0NKpL
                        )}
                      >
                        {"Sarah McHugh"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pnPQk
                        )}
                      >
                        {"Digital and Communications Manager"}
                      </div>

                      <div
                        data-plasmic-name={"resortsWorld2"}
                        data-plasmic-override={overrides.resortsWorld2}
                        className={classNames(
                          projectcss.all,
                          sty.resortsWorld2
                        )}
                      />
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"paragraph2"}
                data-plasmic-override={overrides.paragraph2}
                hasGap={true}
                className={classNames(projectcss.all, sty.paragraph2)}
              >
                <div
                  data-plasmic-name={"group58"}
                  data-plasmic-override={overrides.group58}
                  className={classNames(projectcss.all, sty.group58)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zvjWl
                    )}
                  >
                    {"“"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ptn5V
                    )}
                  >
                    {
                      "We appreciated how hard the verse. team worked to bring our ideas to life, despite a good dose of scope creep from our side.\n\nThis first version of Pawprint was well received by initial users and investors. Users loved the look and feel and the usability and it was absolutely a step beyond an average MVP.\n\nverse. provided us with the first step on our journey and we liked the skills and enthusiasm of the team. Since working with them in early 2020, we have evolved Pawprint from a consumer offering to a business product too building on the foundations verse. created."
                    }
                  </div>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"contact2"}
                  data-plasmic-override={overrides.contact2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.contact2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame43"}
                    data-plasmic-override={overrides.frame43}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame43)}
                  >
                    <div
                      data-plasmic-name={"teamItem18"}
                      data-plasmic-override={overrides.teamItem18}
                      className={classNames(projectcss.all, sty.teamItem18)}
                    >
                      <div
                        data-plasmic-name={"picture18"}
                        data-plasmic-override={overrides.picture18}
                        className={classNames(projectcss.all, sty.picture18)}
                      />
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame62"}
                      data-plasmic-override={overrides.frame62}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame62)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ible7
                        )}
                      >
                        {"Mark McCafferty"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0RvcO
                        )}
                      >
                        {"Head of Key Relationships"}
                      </div>

                      <Pawprint2Icon
                        className={classNames(projectcss.all, sty.svg__jJkh8)}
                        role={"img"}
                      />
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>

          <div
            data-plasmic-name={"awardsRecognition"}
            data-plasmic-override={overrides.awardsRecognition}
            className={classNames(projectcss.all, sty.awardsRecognition)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iHDpH
              )}
            >
              {"Awards & recognition"}
            </div>

            <div
              data-plasmic-name={"image13"}
              data-plasmic-override={overrides.image13}
              className={classNames(projectcss.all, sty.image13)}
            />

            <div
              data-plasmic-name={"image151"}
              data-plasmic-override={overrides.image151}
              className={classNames(projectcss.all, sty.image151)}
            />

            <div
              data-plasmic-name={"image161"}
              data-plasmic-override={overrides.image161}
              className={classNames(projectcss.all, sty.image161)}
            />

            <div
              data-plasmic-name={"image141"}
              data-plasmic-override={overrides.image141}
              className={classNames(projectcss.all, sty.image141)}
            />
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"keyFigures"}
            data-plasmic-override={overrides.keyFigures}
            hasGap={true}
            className={classNames(projectcss.all, sty.keyFigures)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___2T6XU
              )}
            >
              {"Key figures."}
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"row"}
              data-plasmic-override={overrides.row}
              hasGap={true}
              className={classNames(projectcss.all, sty.row)}
            >
              <div
                data-plasmic-name={"statistic"}
                data-plasmic-override={overrides.statistic}
                className={classNames(projectcss.all, sty.statistic)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__qGxMf)}
                  displayHeight={"182px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"182px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/verse_2022/images/outline4.svg",
                    fullWidth: 182,
                    fullHeight: 182,
                    aspectRatio: 1
                  }}
                />

                <div
                  data-plasmic-name={"label13"}
                  data-plasmic-override={overrides.label13}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.label13
                  )}
                >
                  {"231:1"}
                </div>

                <div
                  data-plasmic-name={"descriptor9"}
                  data-plasmic-override={overrides.descriptor9}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor9
                  )}
                >
                  {"average return on investment"}
                </div>

                <div
                  data-plasmic-name={"descriptor10"}
                  data-plasmic-override={overrides.descriptor10}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor10
                  )}
                >
                  {""}
                </div>
              </div>

              <div
                data-plasmic-name={"statistic2"}
                data-plasmic-override={overrides.statistic2}
                className={classNames(projectcss.all, sty.statistic2)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___1CZcq)}
                  displayHeight={"182px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"182px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/verse_2022/images/outline5.svg",
                    fullWidth: 182,
                    fullHeight: 182,
                    aspectRatio: 1
                  }}
                />

                <div
                  data-plasmic-name={"label14"}
                  data-plasmic-override={overrides.label14}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.label14
                  )}
                >
                  {"13"}
                </div>

                <div
                  data-plasmic-name={"descriptor11"}
                  data-plasmic-override={overrides.descriptor11}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor11
                  )}
                >
                  {"years in business"}
                </div>

                <div
                  data-plasmic-name={"descriptor12"}
                  data-plasmic-override={overrides.descriptor12}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor12
                  )}
                >
                  {""}
                </div>
              </div>

              <div
                data-plasmic-name={"statistic3"}
                data-plasmic-override={overrides.statistic3}
                className={classNames(projectcss.all, sty.statistic3)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__s3Pcv)}
                  displayHeight={"182px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"182px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/verse_2022/images/outline6.svg",
                    fullWidth: 182,
                    fullHeight: 182,
                    aspectRatio: 1
                  }}
                />

                <div
                  data-plasmic-name={"label15"}
                  data-plasmic-override={overrides.label15}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.label15
                  )}
                >
                  {"44"}
                </div>

                <div
                  data-plasmic-name={"descriptor13"}
                  data-plasmic-override={overrides.descriptor13}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor13
                  )}
                >
                  {"talented specalists"}
                </div>

                <div
                  data-plasmic-name={"descriptor14"}
                  data-plasmic-override={overrides.descriptor14}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor14
                  )}
                >
                  {""}
                </div>
              </div>

              <div
                data-plasmic-name={"statistic4"}
                data-plasmic-override={overrides.statistic4}
                className={classNames(projectcss.all, sty.statistic4)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___4H4Fv)}
                  displayHeight={"182px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"182px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/verse_2022/images/outline7.svg",
                    fullWidth: 182,
                    fullHeight: 182,
                    aspectRatio: 1
                  }}
                />

                <div
                  data-plasmic-name={"label16"}
                  data-plasmic-override={overrides.label16}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.label16
                  )}
                >
                  {"500+"}
                </div>

                <div
                  data-plasmic-name={"descriptor7"}
                  data-plasmic-override={overrides.descriptor7}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor7
                  )}
                >
                  {"projects successfully delivered"}
                </div>

                <div
                  data-plasmic-name={"descriptor8"}
                  data-plasmic-override={overrides.descriptor8}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor8
                  )}
                >
                  {""}
                </div>
              </div>
            </p.Stack>
          </p.Stack>

          <div
            data-plasmic-name={"doGood"}
            data-plasmic-override={overrides.doGood}
            className={classNames(projectcss.all, sty.doGood)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame52"}
              data-plasmic-override={overrides.frame52}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame52)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qv5J9
                )}
              >
                {"We strive to be a force for good."}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__uo29H
                )}
              >
                {
                  "The idea of making a positive impact with every project is what drives us. That's why we specialise in working with brands promoting environmental and socially responsible products, practices, and values."
                }
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2H7UM
                )}
              >
                {"Working towards are B Corp Certification."}
              </div>

              <div
                data-plasmic-name={"image10"}
                data-plasmic-override={overrides.image10}
                className={classNames(projectcss.all, sty.image10)}
              />
            </p.Stack>

            <div
              data-plasmic-name={"frame54"}
              data-plasmic-override={overrides.frame54}
              className={classNames(projectcss.all, sty.frame54)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"column1"}
                data-plasmic-override={overrides.column1}
                hasGap={true}
                className={classNames(projectcss.all, sty.column1)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"impactProject"}
                  data-plasmic-override={overrides.impactProject}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.impactProject)}
                >
                  <div
                    data-plasmic-name={"media"}
                    data-plasmic-override={overrides.media}
                    className={classNames(projectcss.all, sty.media)}
                  >
                    <div
                      data-plasmic-name={"placeholderImage"}
                      data-plasmic-override={overrides.placeholderImage}
                      className={classNames(
                        projectcss.all,
                        sty.placeholderImage
                      )}
                    />

                    {false ? (
                      <div
                        data-plasmic-name={"dawnPrimary32PxImage"}
                        data-plasmic-override={overrides.dawnPrimary32PxImage}
                        className={classNames(
                          projectcss.all,
                          sty.dawnPrimary32PxImage
                        )}
                      >
                        <DawnPrimary32PxImageIcon
                          className={classNames(projectcss.all, sty.svg__w3GpJ)}
                          role={"img"}
                        />
                      </div>
                    ) : null}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"description"}
                    data-plasmic-override={overrides.description}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.description)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iCVeI
                      )}
                    >
                      {"We supported Restoring Aspen"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"tags5"}
                      data-plasmic-override={overrides.tags5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.tags5)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mwhyW
                        )}
                      >
                        {"Scotland, UK"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8R97F
                        )}
                      >
                        {"January 2022"}
                      </div>
                    </p.Stack>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sDb1M
                      )}
                    >
                      {
                        "We planted an Aspen sapling for each of our talented team to restore this rare, keystone species to the Scottish landscape. The species is important for a wealth of species and is a valuable riparian species, helping to restore the health of Scotland’s rivers."
                      }
                    </div>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"impactProject2"}
                  data-plasmic-override={overrides.impactProject2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.impactProject2)}
                >
                  <div
                    data-plasmic-name={"media2"}
                    data-plasmic-override={overrides.media2}
                    className={classNames(projectcss.all, sty.media2)}
                  >
                    <div
                      data-plasmic-name={"placeholderImage2"}
                      data-plasmic-override={overrides.placeholderImage2}
                      className={classNames(
                        projectcss.all,
                        sty.placeholderImage2
                      )}
                    />

                    {false ? (
                      <div
                        data-plasmic-name={"dawnPrimary32PxImage2"}
                        data-plasmic-override={overrides.dawnPrimary32PxImage2}
                        className={classNames(
                          projectcss.all,
                          sty.dawnPrimary32PxImage2
                        )}
                      >
                        <DawnPrimary32PxImageIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___6Qgr1
                          )}
                          role={"img"}
                        />
                      </div>
                    ) : null}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"description2"}
                    data-plasmic-override={overrides.description2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.description2)}
                  >
                    <div
                      data-plasmic-name={"weSupportedRestoringAspen"}
                      data-plasmic-override={
                        overrides.weSupportedRestoringAspen
                      }
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.weSupportedRestoringAspen
                      )}
                    >
                      {"Tagging Wild Atlantic Salmon in Scotland"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"tags2"}
                      data-plasmic-override={overrides.tags2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.tags2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mvey
                        )}
                      >
                        {"Scotland, UK"}
                      </div>

                      <div
                        data-plasmic-name={"january2022"}
                        data-plasmic-override={overrides.january2022}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.january2022
                        )}
                      >
                        {"December 2022"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={
                        "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers"
                      }
                      data-plasmic-override={
                        overrides.wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers
                      }
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers
                      )}
                    >
                      {
                        "In the Scottish Highlands, we worked with the local fisheries trust to tag and track salmon to identify critical barriers to their migration upriver and potential solutions."
                      }
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"column2"}
                data-plasmic-override={overrides.column2}
                hasGap={true}
                className={classNames(projectcss.all, sty.column2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"impactProject3"}
                  data-plasmic-override={overrides.impactProject3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.impactProject3)}
                >
                  <div
                    data-plasmic-name={"media3"}
                    data-plasmic-override={overrides.media3}
                    className={classNames(projectcss.all, sty.media3)}
                  >
                    <div
                      data-plasmic-name={"placeholderImage3"}
                      data-plasmic-override={overrides.placeholderImage3}
                      className={classNames(
                        projectcss.all,
                        sty.placeholderImage3
                      )}
                    />

                    {false ? (
                      <div
                        data-plasmic-name={"dawnPrimary32PxImage3"}
                        data-plasmic-override={overrides.dawnPrimary32PxImage3}
                        className={classNames(
                          projectcss.all,
                          sty.dawnPrimary32PxImage3
                        )}
                      >
                        <DawnPrimary32PxImageIcon
                          className={classNames(projectcss.all, sty.svg__kjbzC)}
                          role={"img"}
                        />
                      </div>
                    ) : null}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"description3"}
                    data-plasmic-override={overrides.description3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.description3)}
                  >
                    <div
                      data-plasmic-name={"weSupportedRestoringAspen2"}
                      data-plasmic-override={
                        overrides.weSupportedRestoringAspen2
                      }
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.weSupportedRestoringAspen2
                      )}
                    >
                      {"The Snail Species Rescue "}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"tags3"}
                      data-plasmic-override={overrides.tags3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.tags3)}
                    >
                      <div
                        data-plasmic-name={"scotlandUk"}
                        data-plasmic-override={overrides.scotlandUk}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.scotlandUk
                        )}
                      >
                        {"Portugal"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hAiZl
                        )}
                      >
                        {"January 2022"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={
                        "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2"
                      }
                      data-plasmic-override={
                        overrides.wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2
                      }
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2
                      )}
                    >
                      {
                        "We are supporting the expeditions and fieldwork required to prevent the extinction of 4 critically endangered snail species that are endemic to a small island in the middle of the Atlantic Ocean."
                      }
                    </div>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"impactProject4"}
                  data-plasmic-override={overrides.impactProject4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.impactProject4)}
                >
                  <div
                    data-plasmic-name={"media4"}
                    data-plasmic-override={overrides.media4}
                    className={classNames(projectcss.all, sty.media4)}
                  >
                    <div
                      data-plasmic-name={"placeholderImage4"}
                      data-plasmic-override={overrides.placeholderImage4}
                      className={classNames(
                        projectcss.all,
                        sty.placeholderImage4
                      )}
                    />

                    {false ? (
                      <div
                        data-plasmic-name={"dawnPrimary32PxImage4"}
                        data-plasmic-override={overrides.dawnPrimary32PxImage4}
                        className={classNames(
                          projectcss.all,
                          sty.dawnPrimary32PxImage4
                        )}
                      >
                        <DawnPrimary32PxImageIcon
                          className={classNames(projectcss.all, sty.svg__ecNi)}
                          role={"img"}
                        />
                      </div>
                    ) : null}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"description4"}
                    data-plasmic-override={overrides.description4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.description4)}
                  >
                    <div
                      data-plasmic-name={"weSupportedRestoringAspen3"}
                      data-plasmic-override={
                        overrides.weSupportedRestoringAspen3
                      }
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.weSupportedRestoringAspen3
                      )}
                    >
                      {"Rare sea cliff plant conservation"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"tags4"}
                      data-plasmic-override={overrides.tags4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.tags4)}
                    >
                      <div
                        data-plasmic-name={"scotlandUk2"}
                        data-plasmic-override={overrides.scotlandUk2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.scotlandUk2
                        )}
                      >
                        {"Portugal"}
                      </div>

                      <div
                        data-plasmic-name={"january2023"}
                        data-plasmic-override={overrides.january2023}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.january2023
                        )}
                      >
                        {"December  2022"}
                      </div>
                    </p.Stack>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bqMlI
                      )}
                    >
                      {
                        "We planted an Aspen sapling for each of our talented team to restore this rare, keystone species to the Scottish landscape. The species is important for a wealth of species and is a valuable riparian species, helping to restore the health of Scotland’s rivers."
                      }
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </div>
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"keyFigures2"}
            data-plasmic-override={overrides.keyFigures2}
            hasGap={true}
            className={classNames(projectcss.all, sty.keyFigures2)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__aVjZh
              )}
            >
              {"Our impact so far."}
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"row2"}
              data-plasmic-override={overrides.row2}
              hasGap={true}
              className={classNames(projectcss.all, sty.row2)}
            >
              <div
                data-plasmic-name={"statistic5"}
                data-plasmic-override={overrides.statistic5}
                className={classNames(projectcss.all, sty.statistic5)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__eeZq)}
                  displayHeight={"182px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"182px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/verse_2022/images/outline8.svg",
                    fullWidth: 182,
                    fullHeight: 182,
                    aspectRatio: 1
                  }}
                />

                <div
                  data-plasmic-name={"label17"}
                  data-plasmic-override={overrides.label17}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.label17
                  )}
                >
                  {"1076"}
                </div>

                <div
                  data-plasmic-name={"descriptor15"}
                  data-plasmic-override={overrides.descriptor15}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor15
                  )}
                >
                  {"native trees planted"}
                </div>

                <div
                  data-plasmic-name={"descriptor16"}
                  data-plasmic-override={overrides.descriptor16}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor16
                  )}
                >
                  {"184 planted every month"}
                </div>
              </div>

              <div
                data-plasmic-name={"statistic6"}
                data-plasmic-override={overrides.statistic6}
                className={classNames(projectcss.all, sty.statistic6)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__dgfyq)}
                  displayHeight={"182px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"182px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/verse_2022/images/outline9.svg",
                    fullWidth: 182,
                    fullHeight: 182,
                    aspectRatio: 1
                  }}
                />

                <div
                  data-plasmic-name={"label18"}
                  data-plasmic-override={overrides.label18}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.label18
                  )}
                >
                  {"10"}
                </div>

                <div
                  data-plasmic-name={"descriptor17"}
                  data-plasmic-override={overrides.descriptor17}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor17
                  )}
                >
                  {"rewilding projects supported"}
                </div>

                <div
                  data-plasmic-name={"descriptor18"}
                  data-plasmic-override={overrides.descriptor18}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor18
                  )}
                >
                  {"Atleast 1 each month"}
                </div>
              </div>

              <div
                data-plasmic-name={"statistic7"}
                data-plasmic-override={overrides.statistic7}
                className={classNames(projectcss.all, sty.statistic7)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___1S5W)}
                  displayHeight={"182px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"182px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/verse_2022/images/outline10.svg",
                    fullWidth: 182,
                    fullHeight: 182,
                    aspectRatio: 1
                  }}
                />

                <div
                  data-plasmic-name={"label19"}
                  data-plasmic-override={overrides.label19}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.label19
                  )}
                >
                  {"1,203"}
                </div>

                <div
                  data-plasmic-name={"descriptor19"}
                  data-plasmic-override={overrides.descriptor19}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor19
                  )}
                >
                  {"tonnes of CO2 offset"}
                </div>

                <div
                  data-plasmic-name={"descriptor20"}
                  data-plasmic-override={overrides.descriptor20}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.descriptor20
                  )}
                >
                  {""}
                </div>
              </div>
            </p.Stack>
          </p.Stack>

          <div
            data-plasmic-name={"news"}
            data-plasmic-override={overrides.news}
            className={classNames(projectcss.all, sty.news)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame55"}
              data-plasmic-override={overrides.frame55}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame55)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dLgR
                )}
              >
                {"We write some clever stuff."}
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"newsList"}
              data-plasmic-override={overrides.newsList}
              hasGap={true}
              className={classNames(projectcss.all, sty.newsList)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"newsItem"}
                data-plasmic-override={overrides.newsItem}
                hasGap={true}
                className={classNames(projectcss.all, sty.newsItem)}
              >
                <div
                  data-plasmic-name={"newsTitle"}
                  data-plasmic-override={overrides.newsTitle}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.newsTitle
                  )}
                >
                  {"Our top 5 marketing trends for 2022"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"info"}
                  data-plasmic-override={overrides.info}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.info)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__zScJb)}
                    displayHeight={"42px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"42px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/verse_2022/images/ellipse17.svg",
                      fullWidth: 42,
                      fullHeight: 42,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    data-plasmic-name={"author"}
                    data-plasmic-override={overrides.author}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.author
                    )}
                  >
                    {"Meela Leino"}
                  </div>

                  <div
                    data-plasmic-name={"rectangle93"}
                    data-plasmic-override={overrides.rectangle93}
                    className={classNames(projectcss.all, sty.rectangle93)}
                  />

                  <div
                    data-plasmic-name={"tagItem6"}
                    data-plasmic-override={overrides.tagItem6}
                    className={classNames(projectcss.all, sty.tagItem6)}
                  >
                    <div
                      data-plasmic-name={"label20"}
                      data-plasmic-override={overrides.label20}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label20
                      )}
                    >
                      {"Strategy"}
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"newsItem2"}
                data-plasmic-override={overrides.newsItem2}
                hasGap={true}
                className={classNames(projectcss.all, sty.newsItem2)}
              >
                <div
                  data-plasmic-name={"newsTitle2"}
                  data-plasmic-override={overrides.newsTitle2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.newsTitle2
                  )}
                >
                  {"Customer experience is everything."}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"info2"}
                  data-plasmic-override={overrides.info2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.info2)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__nte0)}
                    displayHeight={"42px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"42px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/verse_2022/images/ellipse18.svg",
                      fullWidth: 42,
                      fullHeight: 42,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    data-plasmic-name={"author2"}
                    data-plasmic-override={overrides.author2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.author2
                    )}
                  >
                    {"Suleiman Leadbitter"}
                  </div>

                  <div
                    data-plasmic-name={"rectangle94"}
                    data-plasmic-override={overrides.rectangle94}
                    className={classNames(projectcss.all, sty.rectangle94)}
                  />

                  <div
                    data-plasmic-name={"tagItem7"}
                    data-plasmic-override={overrides.tagItem7}
                    className={classNames(projectcss.all, sty.tagItem7)}
                  >
                    <div
                      data-plasmic-name={"label21"}
                      data-plasmic-override={overrides.label21}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label21
                      )}
                    >
                      {"Customer experience"}
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"newsItem3"}
                data-plasmic-override={overrides.newsItem3}
                hasGap={true}
                className={classNames(projectcss.all, sty.newsItem3)}
              >
                <div
                  data-plasmic-name={"newsTitle3"}
                  data-plasmic-override={overrides.newsTitle3}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.newsTitle3
                  )}
                >
                  {"Transformation tips for any ecommerce business right now."}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"info3"}
                  data-plasmic-override={overrides.info3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.info3)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ualka)}
                    displayHeight={"42px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"42px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/verse_2022/images/ellipse19.svg",
                      fullWidth: 42,
                      fullHeight: 42,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    data-plasmic-name={"author3"}
                    data-plasmic-override={overrides.author3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.author3
                    )}
                  >
                    {"Mehnrisa Khan"}
                  </div>

                  <div
                    data-plasmic-name={"rectangle95"}
                    data-plasmic-override={overrides.rectangle95}
                    className={classNames(projectcss.all, sty.rectangle95)}
                  />

                  <div
                    data-plasmic-name={"tagItem8"}
                    data-plasmic-override={overrides.tagItem8}
                    className={classNames(projectcss.all, sty.tagItem8)}
                  >
                    <div
                      data-plasmic-name={"label22"}
                      data-plasmic-override={overrides.label22}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label22
                      )}
                    >
                      {"Strategy"}
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"newsItem4"}
                data-plasmic-override={overrides.newsItem4}
                hasGap={true}
                className={classNames(projectcss.all, sty.newsItem4)}
              >
                <div
                  data-plasmic-name={"newsTitle4"}
                  data-plasmic-override={overrides.newsTitle4}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.newsTitle4
                  )}
                >
                  {"Adapt now for lasting change."}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"info4"}
                  data-plasmic-override={overrides.info4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.info4)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__hd2X)}
                    displayHeight={"42px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"42px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/verse_2022/images/ellipse20.svg",
                      fullWidth: 42,
                      fullHeight: 42,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    data-plasmic-name={"author4"}
                    data-plasmic-override={overrides.author4}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.author4
                    )}
                  >
                    {"Meela Leino"}
                  </div>

                  <div
                    data-plasmic-name={"rectangle96"}
                    data-plasmic-override={overrides.rectangle96}
                    className={classNames(projectcss.all, sty.rectangle96)}
                  />

                  <div
                    data-plasmic-name={"tagItem4"}
                    data-plasmic-override={overrides.tagItem4}
                    className={classNames(projectcss.all, sty.tagItem4)}
                  >
                    <div
                      data-plasmic-name={"label23"}
                      data-plasmic-override={overrides.label23}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label23
                      )}
                    >
                      {"Strategy"}
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"newsItem5"}
                data-plasmic-override={overrides.newsItem5}
                hasGap={true}
                className={classNames(projectcss.all, sty.newsItem5)}
              >
                <div
                  data-plasmic-name={"newsTitle5"}
                  data-plasmic-override={overrides.newsTitle5}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.newsTitle5
                  )}
                >
                  {"Rapid shift to MACH, Headless infrustracture"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"info5"}
                  data-plasmic-override={overrides.info5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.info5)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__oTnoe)}
                    displayHeight={"42px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"42px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/verse_2022/images/ellipse21.svg",
                      fullWidth: 42,
                      fullHeight: 42,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    data-plasmic-name={"author5"}
                    data-plasmic-override={overrides.author5}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.author5
                    )}
                  >
                    {"Matt Postlethwaite"}
                  </div>

                  <div
                    data-plasmic-name={"rectangle97"}
                    data-plasmic-override={overrides.rectangle97}
                    className={classNames(projectcss.all, sty.rectangle97)}
                  />

                  <div
                    data-plasmic-name={"tagItem5"}
                    data-plasmic-override={overrides.tagItem5}
                    className={classNames(projectcss.all, sty.tagItem5)}
                  >
                    <div
                      data-plasmic-name={"label24"}
                      data-plasmic-override={overrides.label24}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label24
                      )}
                    >
                      {"Technology"}
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame51"}
                data-plasmic-override={overrides.frame51}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame51)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"primaryCta5"}
                  data-plasmic-override={overrides.primaryCta5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.primaryCta5)}
                >
                  <div
                    data-plasmic-name={"label25"}
                    data-plasmic-override={overrides.label25}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label25
                    )}
                  >
                    {"more news"}
                  </div>

                  <div
                    data-plasmic-name={"arrow4"}
                    data-plasmic-override={overrides.arrow4}
                    className={classNames(projectcss.all, sty.arrow4)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__mxQ2L)}
                      displayHeight={"32px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"32px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/verse_2022/images/ellipse22.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__to0Zb)}
                      displayHeight={"14px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"7px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/verse_2022/images/iconArrow8.svg",
                        fullWidth: 7,
                        fullHeight: 14,
                        aspectRatio: 0.5625
                      }}
                    />
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"newsletter"}
            data-plasmic-override={overrides.newsletter}
            hasGap={true}
            className={classNames(projectcss.all, sty.newsletter)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__dN8Ie
              )}
            >
              {"Subscribe to our Monthly Newsletter"}
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__ma9MH)}>
              <div
                data-plasmic-name={"dawnPrimary24PxArrow"}
                data-plasmic-override={overrides.dawnPrimary24PxArrow}
                className={classNames(projectcss.all, sty.dawnPrimary24PxArrow)}
              >
                <div
                  data-plasmic-name={"dawnPrimary24PxArrow2"}
                  data-plasmic-override={overrides.dawnPrimary24PxArrow2}
                  className={classNames(
                    projectcss.all,
                    sty.dawnPrimary24PxArrow2
                  )}
                >
                  <div
                    data-plasmic-name={"icon24PxArrow"}
                    data-plasmic-override={overrides.icon24PxArrow}
                    className={classNames(projectcss.all, sty.icon24PxArrow)}
                  >
                    <div
                      data-plasmic-name={"frame"}
                      data-plasmic-override={overrides.frame}
                      className={classNames(projectcss.all, sty.frame)}
                    />

                    <Vector5Icon
                      className={classNames(projectcss.all, sty.svg__l69Ap)}
                      role={"img"}
                    />
                  </div>
                </div>
              </div>
            </div>
          </p.Stack>

          <div
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames(projectcss.all, sty.footer)}
          >
            <div
              data-plasmic-name={"frame56"}
              data-plasmic-override={overrides.frame56}
              className={classNames(projectcss.all, sty.frame56)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dq7Fv
                )}
              >
                {"Let’s talk,\nWe respond quick."}
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame57"}
                data-plasmic-override={overrides.frame57}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame57)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fNkFv
                  )}
                >
                  {"Follow us."}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iAhHo
                  )}
                >
                  {"Linkedin"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qPct8
                  )}
                >
                  {"Facebook"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vWgy2
                  )}
                >
                  {"Instagram"}
                </div>
              </p.Stack>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wq3Vf
                )}
              >
                {"Find us."}
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame59"}
                data-plasmic-override={overrides.frame59}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame59)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame58"}
                  data-plasmic-override={overrides.frame58}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame58)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bdOmh
                    )}
                  >
                    {"verse.London"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__z9P1X
                    )}
                  >
                    {"3rd Floor\n86-90 Paul Street\nLondon \nEC2A 4NE"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame60"}
                  data-plasmic-override={overrides.frame60}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame60)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__papCn
                    )}
                  >
                    {"verse.Lake District"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qazoe
                    )}
                  >
                    {"Beezon Road\nKendal\nLA8 6BW"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame63"}
                  data-plasmic-override={overrides.frame63}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame63)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4PocU
                    )}
                  >
                    {"verse.Birmingham"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eLEcu
                    )}
                  >
                    {"50 Newhall St\nBirmingham\nB3 3QR"}
                  </div>
                </p.Stack>
              </p.Stack>
            </div>

            <div
              data-plasmic-name={"mainServiceAreas2"}
              data-plasmic-override={overrides.mainServiceAreas2}
              className={classNames(projectcss.all, sty.mainServiceAreas2)}
            >
              <div
                data-plasmic-name={"subline6"}
                data-plasmic-override={overrides.subline6}
                className={classNames(projectcss.all, sty.subline6)}
              >
                <div
                  data-plasmic-name={"rectangle102"}
                  data-plasmic-override={overrides.rectangle102}
                  className={classNames(projectcss.all, sty.rectangle102)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mScl
                  )}
                >
                  {"Demystify your project, talk to us early"}
                </div>
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"callsToAction2"}
                data-plasmic-override={overrides.callsToAction2}
                hasGap={true}
                className={classNames(projectcss.all, sty.callsToAction2)}
              >
                <OrderListStacked
                  className={classNames(
                    "__wab_instance",
                    sty.orderListStacked__hav7T
                  )}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pZLy0
                    )}
                  >
                    {"Live chat with us now"}
                  </div>
                </OrderListStacked>

                <OrderListStacked
                  className={classNames(
                    "__wab_instance",
                    sty.orderListStacked__a5P9B
                  )}
                  slot={"Call (+44) 030 123 4567"}
                >
                  {"Speak on the phone"}
                </OrderListStacked>

                <OrderListStacked
                  className={classNames(
                    "__wab_instance",
                    sty.orderListStacked__heDPn
                  )}
                  slot={"Book a time slot that works for you"}
                >
                  {"Book a video consultation"}
                </OrderListStacked>

                <OrderListStacked
                  className={classNames(
                    "__wab_instance",
                    sty.orderListStacked__eSk5
                  )}
                  slot={"hello@verse.co.uk"}
                >
                  {"Send us an email"}
                </OrderListStacked>
              </p.Stack>
            </div>
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"linkWall"}
            data-plasmic-override={overrides.linkWall}
            hasGap={true}
            className={classNames(projectcss.all, sty.linkWall)}
          >
            <div
              data-plasmic-name={"divider"}
              data-plasmic-override={overrides.divider}
              className={classNames(projectcss.all, sty.divider)}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame48"}
              data-plasmic-override={overrides.frame48}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame48)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame53"}
                data-plasmic-override={overrides.frame53}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame53)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dKpRx
                  )}
                >
                  {"Design & UX Strategy"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7W1Ig
                  )}
                >
                  {"User experience (UX) design"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eiqPk
                  )}
                >
                  {"Research and testing"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___44YKy
                  )}
                >
                  {"Strategy & innovation"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fz3Ok
                  )}
                >
                  {"Rapid prototyping"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___9MydE
                  )}
                >
                  {"VersePartner for Design & UX Strategy"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame64"}
                data-plasmic-override={overrides.frame64}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame64)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vq8H
                  )}
                >
                  {"Headless Website & Products"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xey9G
                  )}
                >
                  {"Platform for growth"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__m2X8X
                  )}
                >
                  {"Platform for ecommerce"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___878GM
                  )}
                >
                  {"VersePartner for Website"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame65"}
                data-plasmic-override={overrides.frame65}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame65)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__neiKp
                  )}
                >
                  {"Performance Marketing"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jg3I
                  )}
                >
                  {"SEO & Pay per click Marketing"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yzHyq
                  )}
                >
                  {"Marketing strategy"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lmhxe
                  )}
                >
                  {"Marketing automation"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nZqGw
                  )}
                >
                  {"Data & intelligence"}
                </div>

                <div
                  data-plasmic-name={"influencerManagement"}
                  data-plasmic-override={overrides.influencerManagement}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.influencerManagement
                  )}
                >
                  {" Influencer management"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eLzfN
                  )}
                >
                  {"VersePartner for Performance Marketing"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame66"}
                data-plasmic-override={overrides.frame66}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame66)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lAWwv
                  )}
                >
                  {"Brand, Campaigns & Content"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__g2Ttu
                  )}
                >
                  {"Brand strategy"}
                </div>

                <div
                  data-plasmic-name={"social"}
                  data-plasmic-override={overrides.social}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.social
                  )}
                >
                  {"Social "}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y5Fm
                  )}
                >
                  {"Campaign activation and management"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lxpzN
                  )}
                >
                  {"Copywriting"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bylAc
                  )}
                >
                  {"VersePartner for Brand, Campaigns & Content"}
                </div>
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <div
            data-plasmic-name={"end"}
            data-plasmic-override={overrides.end}
            className={classNames(projectcss.all, sty.end)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___6UGzV)}
            >
              <div
                data-plasmic-name={"image11"}
                data-plasmic-override={overrides.image11}
                className={classNames(projectcss.all, sty.image11)}
              />

              <div
                data-plasmic-name={"image12"}
                data-plasmic-override={overrides.image12}
                className={classNames(projectcss.all, sty.image12)}
              />
            </p.Stack>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___6ZYb9
              )}
            >
              {
                "Sitemap                Privacy policy            Cookies          The small print               ©2022 Verse Group Limited. All Rights Reserved."
              }
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "stage",
    "sectionMarketingHeadline",
    "navigation",
    "headlineAndActions",
    "headline",
    "h1",
    "textHighlight",
    "actions",
    "mainServiceAreas",
    "subline",
    "rectangle101",
    "highlyExperiencedIntegratedCapabilitiesAcross",
    "callsToAction",
    "arrow5",
    "introduction",
    "container",
    "header",
    "paragraph",
    "primaryCta",
    "label2",
    "arrow6",
    "people",
    "contain",
    "title",
    "_44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat",
    "primaryCta2",
    "label3",
    "arrow",
    "profilePics",
    "profilesColumn1",
    "teamItem",
    "picture",
    "teamItem2",
    "picture2",
    "teamItem3",
    "picture3",
    "teamItem4",
    "picture4",
    "profileColumn2",
    "teamItem5",
    "picture5",
    "teamItem6",
    "picture6",
    "teamItem7",
    "picture7",
    "teamItem8",
    "picture8",
    "profileColumn3",
    "teamItem9",
    "picture9",
    "teamItem10",
    "picture10",
    "teamItem11",
    "picture11",
    "teamItem12",
    "picture12",
    "profileColumn4",
    "teamItem13",
    "picture13",
    "teamItem14",
    "picture14",
    "teamItem15",
    "picture15",
    "teamItem16",
    "picture16",
    "ourWork",
    "weCreate",
    "workList",
    "listItem",
    "arrowSmall",
    "listItem2",
    "resortsWorldBirmingham",
    "listItem3",
    "resortsWorldBirmingham2",
    "listItem4",
    "resortsWorldBirmingham3",
    "listItem5",
    "resortsWorldBirmingham4",
    "caseStudies",
    "caseStudy",
    "overlay",
    "stats",
    "statistics",
    "label8",
    "descriptor",
    "descriptor2",
    "statistics2",
    "label9",
    "descriptor3",
    "descriptor4",
    "statistics3",
    "label10",
    "descriptor5",
    "descriptor6",
    "introduction2",
    "tags",
    "tagItem",
    "label4",
    "tagItem2",
    "label5",
    "tagItem3",
    "label6",
    "button",
    "label7",
    "moreWorkContact",
    "frame49",
    "primaryCta3",
    "label11",
    "arrow3",
    "frame50",
    "primaryCta4",
    "label12",
    "arrow2",
    "ourCustomers",
    "introduction3",
    "logoWall",
    "lakelandLeisureEstates",
    "resortsWorld",
    "introduction4",
    "container2",
    "paragraph3",
    "group57",
    "contact",
    "frame42",
    "teamItem17",
    "picture17",
    "frame61",
    "resortsWorld2",
    "paragraph2",
    "group58",
    "contact2",
    "frame43",
    "teamItem18",
    "picture18",
    "frame62",
    "awardsRecognition",
    "image13",
    "image151",
    "image161",
    "image141",
    "keyFigures",
    "row",
    "statistic",
    "label13",
    "descriptor9",
    "descriptor10",
    "statistic2",
    "label14",
    "descriptor11",
    "descriptor12",
    "statistic3",
    "label15",
    "descriptor13",
    "descriptor14",
    "statistic4",
    "label16",
    "descriptor7",
    "descriptor8",
    "doGood",
    "frame52",
    "image10",
    "frame54",
    "column1",
    "impactProject",
    "media",
    "placeholderImage",
    "dawnPrimary32PxImage",
    "description",
    "tags5",
    "impactProject2",
    "media2",
    "placeholderImage2",
    "dawnPrimary32PxImage2",
    "description2",
    "weSupportedRestoringAspen",
    "tags2",
    "january2022",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers",
    "column2",
    "impactProject3",
    "media3",
    "placeholderImage3",
    "dawnPrimary32PxImage3",
    "description3",
    "weSupportedRestoringAspen2",
    "tags3",
    "scotlandUk",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2",
    "impactProject4",
    "media4",
    "placeholderImage4",
    "dawnPrimary32PxImage4",
    "description4",
    "weSupportedRestoringAspen3",
    "tags4",
    "scotlandUk2",
    "january2023",
    "keyFigures2",
    "row2",
    "statistic5",
    "label17",
    "descriptor15",
    "descriptor16",
    "statistic6",
    "label18",
    "descriptor17",
    "descriptor18",
    "statistic7",
    "label19",
    "descriptor19",
    "descriptor20",
    "news",
    "frame55",
    "newsList",
    "newsItem",
    "newsTitle",
    "info",
    "author",
    "rectangle93",
    "tagItem6",
    "label20",
    "newsItem2",
    "newsTitle2",
    "info2",
    "author2",
    "rectangle94",
    "tagItem7",
    "label21",
    "newsItem3",
    "newsTitle3",
    "info3",
    "author3",
    "rectangle95",
    "tagItem8",
    "label22",
    "newsItem4",
    "newsTitle4",
    "info4",
    "author4",
    "rectangle96",
    "tagItem4",
    "label23",
    "newsItem5",
    "newsTitle5",
    "info5",
    "author5",
    "rectangle97",
    "tagItem5",
    "label24",
    "frame51",
    "primaryCta5",
    "label25",
    "arrow4",
    "newsletter",
    "dawnPrimary24PxArrow",
    "dawnPrimary24PxArrow2",
    "icon24PxArrow",
    "frame",
    "footer",
    "frame56",
    "frame57",
    "frame59",
    "frame58",
    "frame60",
    "frame63",
    "mainServiceAreas2",
    "subline6",
    "rectangle102",
    "callsToAction2",
    "linkWall",
    "divider",
    "frame48",
    "frame53",
    "frame64",
    "frame65",
    "influencerManagement",
    "frame66",
    "social",
    "end",
    "image11",
    "image12"
  ],
  stage: [
    "stage",
    "sectionMarketingHeadline",
    "navigation",
    "headlineAndActions",
    "headline",
    "h1",
    "textHighlight",
    "actions",
    "mainServiceAreas",
    "subline",
    "rectangle101",
    "highlyExperiencedIntegratedCapabilitiesAcross",
    "callsToAction",
    "arrow5"
  ],
  sectionMarketingHeadline: ["sectionMarketingHeadline"],
  navigation: ["navigation"],
  headlineAndActions: [
    "headlineAndActions",
    "headline",
    "h1",
    "textHighlight",
    "actions",
    "mainServiceAreas",
    "subline",
    "rectangle101",
    "highlyExperiencedIntegratedCapabilitiesAcross",
    "callsToAction"
  ],
  headline: ["headline", "h1", "textHighlight", "actions"],
  h1: ["h1", "textHighlight"],
  textHighlight: ["textHighlight"],
  actions: ["actions"],
  mainServiceAreas: [
    "mainServiceAreas",
    "subline",
    "rectangle101",
    "highlyExperiencedIntegratedCapabilitiesAcross",
    "callsToAction"
  ],
  subline: [
    "subline",
    "rectangle101",
    "highlyExperiencedIntegratedCapabilitiesAcross"
  ],
  rectangle101: ["rectangle101"],
  highlyExperiencedIntegratedCapabilitiesAcross: [
    "highlyExperiencedIntegratedCapabilitiesAcross"
  ],
  callsToAction: ["callsToAction"],
  arrow5: ["arrow5"],
  introduction: [
    "introduction",
    "container",
    "header",
    "paragraph",
    "primaryCta",
    "label2",
    "arrow6"
  ],
  container: [
    "container",
    "header",
    "paragraph",
    "primaryCta",
    "label2",
    "arrow6"
  ],
  header: ["header"],
  paragraph: ["paragraph", "primaryCta", "label2", "arrow6"],
  primaryCta: ["primaryCta", "label2", "arrow6"],
  label2: ["label2"],
  arrow6: ["arrow6"],
  people: [
    "people",
    "contain",
    "title",
    "_44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat",
    "primaryCta2",
    "label3",
    "arrow",
    "profilePics",
    "profilesColumn1",
    "teamItem",
    "picture",
    "teamItem2",
    "picture2",
    "teamItem3",
    "picture3",
    "teamItem4",
    "picture4",
    "profileColumn2",
    "teamItem5",
    "picture5",
    "teamItem6",
    "picture6",
    "teamItem7",
    "picture7",
    "teamItem8",
    "picture8",
    "profileColumn3",
    "teamItem9",
    "picture9",
    "teamItem10",
    "picture10",
    "teamItem11",
    "picture11",
    "teamItem12",
    "picture12",
    "profileColumn4",
    "teamItem13",
    "picture13",
    "teamItem14",
    "picture14",
    "teamItem15",
    "picture15",
    "teamItem16",
    "picture16"
  ],
  contain: [
    "contain",
    "title",
    "_44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat",
    "primaryCta2",
    "label3",
    "arrow",
    "profilePics",
    "profilesColumn1",
    "teamItem",
    "picture",
    "teamItem2",
    "picture2",
    "teamItem3",
    "picture3",
    "teamItem4",
    "picture4",
    "profileColumn2",
    "teamItem5",
    "picture5",
    "teamItem6",
    "picture6",
    "teamItem7",
    "picture7",
    "teamItem8",
    "picture8",
    "profileColumn3",
    "teamItem9",
    "picture9",
    "teamItem10",
    "picture10",
    "teamItem11",
    "picture11",
    "teamItem12",
    "picture12",
    "profileColumn4",
    "teamItem13",
    "picture13",
    "teamItem14",
    "picture14",
    "teamItem15",
    "picture15",
    "teamItem16",
    "picture16"
  ],
  title: [
    "title",
    "_44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat",
    "primaryCta2",
    "label3",
    "arrow"
  ],
  _44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat:
    [
      "_44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat"
    ],
  primaryCta2: ["primaryCta2", "label3", "arrow"],
  label3: ["label3"],
  arrow: ["arrow"],
  profilePics: [
    "profilePics",
    "profilesColumn1",
    "teamItem",
    "picture",
    "teamItem2",
    "picture2",
    "teamItem3",
    "picture3",
    "teamItem4",
    "picture4",
    "profileColumn2",
    "teamItem5",
    "picture5",
    "teamItem6",
    "picture6",
    "teamItem7",
    "picture7",
    "teamItem8",
    "picture8",
    "profileColumn3",
    "teamItem9",
    "picture9",
    "teamItem10",
    "picture10",
    "teamItem11",
    "picture11",
    "teamItem12",
    "picture12",
    "profileColumn4",
    "teamItem13",
    "picture13",
    "teamItem14",
    "picture14",
    "teamItem15",
    "picture15",
    "teamItem16",
    "picture16"
  ],
  profilesColumn1: [
    "profilesColumn1",
    "teamItem",
    "picture",
    "teamItem2",
    "picture2",
    "teamItem3",
    "picture3",
    "teamItem4",
    "picture4"
  ],
  teamItem: ["teamItem", "picture"],
  picture: ["picture"],
  teamItem2: ["teamItem2", "picture2"],
  picture2: ["picture2"],
  teamItem3: ["teamItem3", "picture3"],
  picture3: ["picture3"],
  teamItem4: ["teamItem4", "picture4"],
  picture4: ["picture4"],
  profileColumn2: [
    "profileColumn2",
    "teamItem5",
    "picture5",
    "teamItem6",
    "picture6",
    "teamItem7",
    "picture7",
    "teamItem8",
    "picture8"
  ],
  teamItem5: ["teamItem5", "picture5"],
  picture5: ["picture5"],
  teamItem6: ["teamItem6", "picture6"],
  picture6: ["picture6"],
  teamItem7: ["teamItem7", "picture7"],
  picture7: ["picture7"],
  teamItem8: ["teamItem8", "picture8"],
  picture8: ["picture8"],
  profileColumn3: [
    "profileColumn3",
    "teamItem9",
    "picture9",
    "teamItem10",
    "picture10",
    "teamItem11",
    "picture11",
    "teamItem12",
    "picture12"
  ],
  teamItem9: ["teamItem9", "picture9"],
  picture9: ["picture9"],
  teamItem10: ["teamItem10", "picture10"],
  picture10: ["picture10"],
  teamItem11: ["teamItem11", "picture11"],
  picture11: ["picture11"],
  teamItem12: ["teamItem12", "picture12"],
  picture12: ["picture12"],
  profileColumn4: [
    "profileColumn4",
    "teamItem13",
    "picture13",
    "teamItem14",
    "picture14",
    "teamItem15",
    "picture15",
    "teamItem16",
    "picture16"
  ],
  teamItem13: ["teamItem13", "picture13"],
  picture13: ["picture13"],
  teamItem14: ["teamItem14", "picture14"],
  picture14: ["picture14"],
  teamItem15: ["teamItem15", "picture15"],
  picture15: ["picture15"],
  teamItem16: ["teamItem16", "picture16"],
  picture16: ["picture16"],
  ourWork: [
    "ourWork",
    "weCreate",
    "workList",
    "listItem",
    "arrowSmall",
    "listItem2",
    "resortsWorldBirmingham",
    "listItem3",
    "resortsWorldBirmingham2",
    "listItem4",
    "resortsWorldBirmingham3",
    "listItem5",
    "resortsWorldBirmingham4",
    "caseStudies",
    "caseStudy",
    "overlay",
    "stats",
    "statistics",
    "label8",
    "descriptor",
    "descriptor2",
    "statistics2",
    "label9",
    "descriptor3",
    "descriptor4",
    "statistics3",
    "label10",
    "descriptor5",
    "descriptor6",
    "introduction2",
    "tags",
    "tagItem",
    "label4",
    "tagItem2",
    "label5",
    "tagItem3",
    "label6",
    "button",
    "label7"
  ],
  weCreate: [
    "weCreate",
    "workList",
    "listItem",
    "arrowSmall",
    "listItem2",
    "resortsWorldBirmingham",
    "listItem3",
    "resortsWorldBirmingham2",
    "listItem4",
    "resortsWorldBirmingham3",
    "listItem5",
    "resortsWorldBirmingham4"
  ],
  workList: [
    "workList",
    "listItem",
    "arrowSmall",
    "listItem2",
    "resortsWorldBirmingham",
    "listItem3",
    "resortsWorldBirmingham2",
    "listItem4",
    "resortsWorldBirmingham3",
    "listItem5",
    "resortsWorldBirmingham4"
  ],
  listItem: ["listItem", "arrowSmall"],
  arrowSmall: ["arrowSmall"],
  listItem2: ["listItem2", "resortsWorldBirmingham"],
  resortsWorldBirmingham: ["resortsWorldBirmingham"],
  listItem3: ["listItem3", "resortsWorldBirmingham2"],
  resortsWorldBirmingham2: ["resortsWorldBirmingham2"],
  listItem4: ["listItem4", "resortsWorldBirmingham3"],
  resortsWorldBirmingham3: ["resortsWorldBirmingham3"],
  listItem5: ["listItem5", "resortsWorldBirmingham4"],
  resortsWorldBirmingham4: ["resortsWorldBirmingham4"],
  caseStudies: [
    "caseStudies",
    "caseStudy",
    "overlay",
    "stats",
    "statistics",
    "label8",
    "descriptor",
    "descriptor2",
    "statistics2",
    "label9",
    "descriptor3",
    "descriptor4",
    "statistics3",
    "label10",
    "descriptor5",
    "descriptor6",
    "introduction2",
    "tags",
    "tagItem",
    "label4",
    "tagItem2",
    "label5",
    "tagItem3",
    "label6",
    "button",
    "label7"
  ],
  caseStudy: [
    "caseStudy",
    "overlay",
    "stats",
    "statistics",
    "label8",
    "descriptor",
    "descriptor2",
    "statistics2",
    "label9",
    "descriptor3",
    "descriptor4",
    "statistics3",
    "label10",
    "descriptor5",
    "descriptor6",
    "introduction2",
    "tags",
    "tagItem",
    "label4",
    "tagItem2",
    "label5",
    "tagItem3",
    "label6",
    "button",
    "label7"
  ],
  overlay: [
    "overlay",
    "stats",
    "statistics",
    "label8",
    "descriptor",
    "descriptor2",
    "statistics2",
    "label9",
    "descriptor3",
    "descriptor4",
    "statistics3",
    "label10",
    "descriptor5",
    "descriptor6",
    "introduction2",
    "tags",
    "tagItem",
    "label4",
    "tagItem2",
    "label5",
    "tagItem3",
    "label6",
    "button",
    "label7"
  ],
  stats: [
    "stats",
    "statistics",
    "label8",
    "descriptor",
    "descriptor2",
    "statistics2",
    "label9",
    "descriptor3",
    "descriptor4",
    "statistics3",
    "label10",
    "descriptor5",
    "descriptor6"
  ],
  statistics: ["statistics", "label8", "descriptor", "descriptor2"],
  label8: ["label8"],
  descriptor: ["descriptor"],
  descriptor2: ["descriptor2"],
  statistics2: ["statistics2", "label9", "descriptor3", "descriptor4"],
  label9: ["label9"],
  descriptor3: ["descriptor3"],
  descriptor4: ["descriptor4"],
  statistics3: ["statistics3", "label10", "descriptor5", "descriptor6"],
  label10: ["label10"],
  descriptor5: ["descriptor5"],
  descriptor6: ["descriptor6"],
  introduction2: [
    "introduction2",
    "tags",
    "tagItem",
    "label4",
    "tagItem2",
    "label5",
    "tagItem3",
    "label6"
  ],
  tags: [
    "tags",
    "tagItem",
    "label4",
    "tagItem2",
    "label5",
    "tagItem3",
    "label6"
  ],
  tagItem: ["tagItem", "label4"],
  label4: ["label4"],
  tagItem2: ["tagItem2", "label5"],
  label5: ["label5"],
  tagItem3: ["tagItem3", "label6"],
  label6: ["label6"],
  button: ["button", "label7"],
  label7: ["label7"],
  moreWorkContact: [
    "moreWorkContact",
    "frame49",
    "primaryCta3",
    "label11",
    "arrow3",
    "frame50",
    "primaryCta4",
    "label12",
    "arrow2"
  ],
  frame49: ["frame49", "primaryCta3", "label11", "arrow3"],
  primaryCta3: ["primaryCta3", "label11", "arrow3"],
  label11: ["label11"],
  arrow3: ["arrow3"],
  frame50: ["frame50", "primaryCta4", "label12", "arrow2"],
  primaryCta4: ["primaryCta4", "label12", "arrow2"],
  label12: ["label12"],
  arrow2: ["arrow2"],
  ourCustomers: [
    "ourCustomers",
    "introduction3",
    "logoWall",
    "lakelandLeisureEstates",
    "resortsWorld"
  ],
  introduction3: ["introduction3"],
  logoWall: ["logoWall", "lakelandLeisureEstates", "resortsWorld"],
  lakelandLeisureEstates: ["lakelandLeisureEstates"],
  resortsWorld: ["resortsWorld"],
  introduction4: [
    "introduction4",
    "container2",
    "paragraph3",
    "group57",
    "contact",
    "frame42",
    "teamItem17",
    "picture17",
    "frame61",
    "resortsWorld2",
    "paragraph2",
    "group58",
    "contact2",
    "frame43",
    "teamItem18",
    "picture18",
    "frame62"
  ],
  container2: [
    "container2",
    "paragraph3",
    "group57",
    "contact",
    "frame42",
    "teamItem17",
    "picture17",
    "frame61",
    "resortsWorld2",
    "paragraph2",
    "group58",
    "contact2",
    "frame43",
    "teamItem18",
    "picture18",
    "frame62"
  ],
  paragraph3: [
    "paragraph3",
    "group57",
    "contact",
    "frame42",
    "teamItem17",
    "picture17",
    "frame61",
    "resortsWorld2"
  ],
  group57: ["group57"],
  contact: [
    "contact",
    "frame42",
    "teamItem17",
    "picture17",
    "frame61",
    "resortsWorld2"
  ],
  frame42: ["frame42", "teamItem17", "picture17", "frame61", "resortsWorld2"],
  teamItem17: ["teamItem17", "picture17"],
  picture17: ["picture17"],
  frame61: ["frame61", "resortsWorld2"],
  resortsWorld2: ["resortsWorld2"],
  paragraph2: [
    "paragraph2",
    "group58",
    "contact2",
    "frame43",
    "teamItem18",
    "picture18",
    "frame62"
  ],
  group58: ["group58"],
  contact2: ["contact2", "frame43", "teamItem18", "picture18", "frame62"],
  frame43: ["frame43", "teamItem18", "picture18", "frame62"],
  teamItem18: ["teamItem18", "picture18"],
  picture18: ["picture18"],
  frame62: ["frame62"],
  awardsRecognition: [
    "awardsRecognition",
    "image13",
    "image151",
    "image161",
    "image141"
  ],
  image13: ["image13"],
  image151: ["image151"],
  image161: ["image161"],
  image141: ["image141"],
  keyFigures: [
    "keyFigures",
    "row",
    "statistic",
    "label13",
    "descriptor9",
    "descriptor10",
    "statistic2",
    "label14",
    "descriptor11",
    "descriptor12",
    "statistic3",
    "label15",
    "descriptor13",
    "descriptor14",
    "statistic4",
    "label16",
    "descriptor7",
    "descriptor8"
  ],
  row: [
    "row",
    "statistic",
    "label13",
    "descriptor9",
    "descriptor10",
    "statistic2",
    "label14",
    "descriptor11",
    "descriptor12",
    "statistic3",
    "label15",
    "descriptor13",
    "descriptor14",
    "statistic4",
    "label16",
    "descriptor7",
    "descriptor8"
  ],
  statistic: ["statistic", "label13", "descriptor9", "descriptor10"],
  label13: ["label13"],
  descriptor9: ["descriptor9"],
  descriptor10: ["descriptor10"],
  statistic2: ["statistic2", "label14", "descriptor11", "descriptor12"],
  label14: ["label14"],
  descriptor11: ["descriptor11"],
  descriptor12: ["descriptor12"],
  statistic3: ["statistic3", "label15", "descriptor13", "descriptor14"],
  label15: ["label15"],
  descriptor13: ["descriptor13"],
  descriptor14: ["descriptor14"],
  statistic4: ["statistic4", "label16", "descriptor7", "descriptor8"],
  label16: ["label16"],
  descriptor7: ["descriptor7"],
  descriptor8: ["descriptor8"],
  doGood: [
    "doGood",
    "frame52",
    "image10",
    "frame54",
    "column1",
    "impactProject",
    "media",
    "placeholderImage",
    "dawnPrimary32PxImage",
    "description",
    "tags5",
    "impactProject2",
    "media2",
    "placeholderImage2",
    "dawnPrimary32PxImage2",
    "description2",
    "weSupportedRestoringAspen",
    "tags2",
    "january2022",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers",
    "column2",
    "impactProject3",
    "media3",
    "placeholderImage3",
    "dawnPrimary32PxImage3",
    "description3",
    "weSupportedRestoringAspen2",
    "tags3",
    "scotlandUk",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2",
    "impactProject4",
    "media4",
    "placeholderImage4",
    "dawnPrimary32PxImage4",
    "description4",
    "weSupportedRestoringAspen3",
    "tags4",
    "scotlandUk2",
    "january2023"
  ],
  frame52: ["frame52", "image10"],
  image10: ["image10"],
  frame54: [
    "frame54",
    "column1",
    "impactProject",
    "media",
    "placeholderImage",
    "dawnPrimary32PxImage",
    "description",
    "tags5",
    "impactProject2",
    "media2",
    "placeholderImage2",
    "dawnPrimary32PxImage2",
    "description2",
    "weSupportedRestoringAspen",
    "tags2",
    "january2022",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers",
    "column2",
    "impactProject3",
    "media3",
    "placeholderImage3",
    "dawnPrimary32PxImage3",
    "description3",
    "weSupportedRestoringAspen2",
    "tags3",
    "scotlandUk",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2",
    "impactProject4",
    "media4",
    "placeholderImage4",
    "dawnPrimary32PxImage4",
    "description4",
    "weSupportedRestoringAspen3",
    "tags4",
    "scotlandUk2",
    "january2023"
  ],
  column1: [
    "column1",
    "impactProject",
    "media",
    "placeholderImage",
    "dawnPrimary32PxImage",
    "description",
    "tags5",
    "impactProject2",
    "media2",
    "placeholderImage2",
    "dawnPrimary32PxImage2",
    "description2",
    "weSupportedRestoringAspen",
    "tags2",
    "january2022",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers"
  ],
  impactProject: [
    "impactProject",
    "media",
    "placeholderImage",
    "dawnPrimary32PxImage",
    "description",
    "tags5"
  ],
  media: ["media", "placeholderImage", "dawnPrimary32PxImage"],
  placeholderImage: ["placeholderImage"],
  dawnPrimary32PxImage: ["dawnPrimary32PxImage"],
  description: ["description", "tags5"],
  tags5: ["tags5"],
  impactProject2: [
    "impactProject2",
    "media2",
    "placeholderImage2",
    "dawnPrimary32PxImage2",
    "description2",
    "weSupportedRestoringAspen",
    "tags2",
    "january2022",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers"
  ],
  media2: ["media2", "placeholderImage2", "dawnPrimary32PxImage2"],
  placeholderImage2: ["placeholderImage2"],
  dawnPrimary32PxImage2: ["dawnPrimary32PxImage2"],
  description2: [
    "description2",
    "weSupportedRestoringAspen",
    "tags2",
    "january2022",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers"
  ],
  weSupportedRestoringAspen: ["weSupportedRestoringAspen"],
  tags2: ["tags2", "january2022"],
  january2022: ["january2022"],
  wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers:
    [
      "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers"
    ],
  column2: [
    "column2",
    "impactProject3",
    "media3",
    "placeholderImage3",
    "dawnPrimary32PxImage3",
    "description3",
    "weSupportedRestoringAspen2",
    "tags3",
    "scotlandUk",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2",
    "impactProject4",
    "media4",
    "placeholderImage4",
    "dawnPrimary32PxImage4",
    "description4",
    "weSupportedRestoringAspen3",
    "tags4",
    "scotlandUk2",
    "january2023"
  ],
  impactProject3: [
    "impactProject3",
    "media3",
    "placeholderImage3",
    "dawnPrimary32PxImage3",
    "description3",
    "weSupportedRestoringAspen2",
    "tags3",
    "scotlandUk",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2"
  ],
  media3: ["media3", "placeholderImage3", "dawnPrimary32PxImage3"],
  placeholderImage3: ["placeholderImage3"],
  dawnPrimary32PxImage3: ["dawnPrimary32PxImage3"],
  description3: [
    "description3",
    "weSupportedRestoringAspen2",
    "tags3",
    "scotlandUk",
    "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2"
  ],
  weSupportedRestoringAspen2: ["weSupportedRestoringAspen2"],
  tags3: ["tags3", "scotlandUk"],
  scotlandUk: ["scotlandUk"],
  wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2:
    [
      "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2"
    ],
  impactProject4: [
    "impactProject4",
    "media4",
    "placeholderImage4",
    "dawnPrimary32PxImage4",
    "description4",
    "weSupportedRestoringAspen3",
    "tags4",
    "scotlandUk2",
    "january2023"
  ],
  media4: ["media4", "placeholderImage4", "dawnPrimary32PxImage4"],
  placeholderImage4: ["placeholderImage4"],
  dawnPrimary32PxImage4: ["dawnPrimary32PxImage4"],
  description4: [
    "description4",
    "weSupportedRestoringAspen3",
    "tags4",
    "scotlandUk2",
    "january2023"
  ],
  weSupportedRestoringAspen3: ["weSupportedRestoringAspen3"],
  tags4: ["tags4", "scotlandUk2", "january2023"],
  scotlandUk2: ["scotlandUk2"],
  january2023: ["january2023"],
  keyFigures2: [
    "keyFigures2",
    "row2",
    "statistic5",
    "label17",
    "descriptor15",
    "descriptor16",
    "statistic6",
    "label18",
    "descriptor17",
    "descriptor18",
    "statistic7",
    "label19",
    "descriptor19",
    "descriptor20"
  ],
  row2: [
    "row2",
    "statistic5",
    "label17",
    "descriptor15",
    "descriptor16",
    "statistic6",
    "label18",
    "descriptor17",
    "descriptor18",
    "statistic7",
    "label19",
    "descriptor19",
    "descriptor20"
  ],
  statistic5: ["statistic5", "label17", "descriptor15", "descriptor16"],
  label17: ["label17"],
  descriptor15: ["descriptor15"],
  descriptor16: ["descriptor16"],
  statistic6: ["statistic6", "label18", "descriptor17", "descriptor18"],
  label18: ["label18"],
  descriptor17: ["descriptor17"],
  descriptor18: ["descriptor18"],
  statistic7: ["statistic7", "label19", "descriptor19", "descriptor20"],
  label19: ["label19"],
  descriptor19: ["descriptor19"],
  descriptor20: ["descriptor20"],
  news: [
    "news",
    "frame55",
    "newsList",
    "newsItem",
    "newsTitle",
    "info",
    "author",
    "rectangle93",
    "tagItem6",
    "label20",
    "newsItem2",
    "newsTitle2",
    "info2",
    "author2",
    "rectangle94",
    "tagItem7",
    "label21",
    "newsItem3",
    "newsTitle3",
    "info3",
    "author3",
    "rectangle95",
    "tagItem8",
    "label22",
    "newsItem4",
    "newsTitle4",
    "info4",
    "author4",
    "rectangle96",
    "tagItem4",
    "label23",
    "newsItem5",
    "newsTitle5",
    "info5",
    "author5",
    "rectangle97",
    "tagItem5",
    "label24",
    "frame51",
    "primaryCta5",
    "label25",
    "arrow4"
  ],
  frame55: ["frame55"],
  newsList: [
    "newsList",
    "newsItem",
    "newsTitle",
    "info",
    "author",
    "rectangle93",
    "tagItem6",
    "label20",
    "newsItem2",
    "newsTitle2",
    "info2",
    "author2",
    "rectangle94",
    "tagItem7",
    "label21",
    "newsItem3",
    "newsTitle3",
    "info3",
    "author3",
    "rectangle95",
    "tagItem8",
    "label22",
    "newsItem4",
    "newsTitle4",
    "info4",
    "author4",
    "rectangle96",
    "tagItem4",
    "label23",
    "newsItem5",
    "newsTitle5",
    "info5",
    "author5",
    "rectangle97",
    "tagItem5",
    "label24",
    "frame51",
    "primaryCta5",
    "label25",
    "arrow4"
  ],
  newsItem: [
    "newsItem",
    "newsTitle",
    "info",
    "author",
    "rectangle93",
    "tagItem6",
    "label20"
  ],
  newsTitle: ["newsTitle"],
  info: ["info", "author", "rectangle93", "tagItem6", "label20"],
  author: ["author"],
  rectangle93: ["rectangle93"],
  tagItem6: ["tagItem6", "label20"],
  label20: ["label20"],
  newsItem2: [
    "newsItem2",
    "newsTitle2",
    "info2",
    "author2",
    "rectangle94",
    "tagItem7",
    "label21"
  ],
  newsTitle2: ["newsTitle2"],
  info2: ["info2", "author2", "rectangle94", "tagItem7", "label21"],
  author2: ["author2"],
  rectangle94: ["rectangle94"],
  tagItem7: ["tagItem7", "label21"],
  label21: ["label21"],
  newsItem3: [
    "newsItem3",
    "newsTitle3",
    "info3",
    "author3",
    "rectangle95",
    "tagItem8",
    "label22"
  ],
  newsTitle3: ["newsTitle3"],
  info3: ["info3", "author3", "rectangle95", "tagItem8", "label22"],
  author3: ["author3"],
  rectangle95: ["rectangle95"],
  tagItem8: ["tagItem8", "label22"],
  label22: ["label22"],
  newsItem4: [
    "newsItem4",
    "newsTitle4",
    "info4",
    "author4",
    "rectangle96",
    "tagItem4",
    "label23"
  ],
  newsTitle4: ["newsTitle4"],
  info4: ["info4", "author4", "rectangle96", "tagItem4", "label23"],
  author4: ["author4"],
  rectangle96: ["rectangle96"],
  tagItem4: ["tagItem4", "label23"],
  label23: ["label23"],
  newsItem5: [
    "newsItem5",
    "newsTitle5",
    "info5",
    "author5",
    "rectangle97",
    "tagItem5",
    "label24"
  ],
  newsTitle5: ["newsTitle5"],
  info5: ["info5", "author5", "rectangle97", "tagItem5", "label24"],
  author5: ["author5"],
  rectangle97: ["rectangle97"],
  tagItem5: ["tagItem5", "label24"],
  label24: ["label24"],
  frame51: ["frame51", "primaryCta5", "label25", "arrow4"],
  primaryCta5: ["primaryCta5", "label25", "arrow4"],
  label25: ["label25"],
  arrow4: ["arrow4"],
  newsletter: [
    "newsletter",
    "dawnPrimary24PxArrow",
    "dawnPrimary24PxArrow2",
    "icon24PxArrow",
    "frame"
  ],
  dawnPrimary24PxArrow: [
    "dawnPrimary24PxArrow",
    "dawnPrimary24PxArrow2",
    "icon24PxArrow",
    "frame"
  ],
  dawnPrimary24PxArrow2: ["dawnPrimary24PxArrow2", "icon24PxArrow", "frame"],
  icon24PxArrow: ["icon24PxArrow", "frame"],
  frame: ["frame"],
  footer: [
    "footer",
    "frame56",
    "frame57",
    "frame59",
    "frame58",
    "frame60",
    "frame63",
    "mainServiceAreas2",
    "subline6",
    "rectangle102",
    "callsToAction2"
  ],
  frame56: ["frame56", "frame57", "frame59", "frame58", "frame60", "frame63"],
  frame57: ["frame57"],
  frame59: ["frame59", "frame58", "frame60", "frame63"],
  frame58: ["frame58"],
  frame60: ["frame60"],
  frame63: ["frame63"],
  mainServiceAreas2: [
    "mainServiceAreas2",
    "subline6",
    "rectangle102",
    "callsToAction2"
  ],
  subline6: ["subline6", "rectangle102"],
  rectangle102: ["rectangle102"],
  callsToAction2: ["callsToAction2"],
  linkWall: [
    "linkWall",
    "divider",
    "frame48",
    "frame53",
    "frame64",
    "frame65",
    "influencerManagement",
    "frame66",
    "social"
  ],
  divider: ["divider"],
  frame48: [
    "frame48",
    "frame53",
    "frame64",
    "frame65",
    "influencerManagement",
    "frame66",
    "social"
  ],
  frame53: ["frame53"],
  frame64: ["frame64"],
  frame65: ["frame65", "influencerManagement"],
  influencerManagement: ["influencerManagement"],
  frame66: ["frame66", "social"],
  social: ["social"],
  end: ["end", "image11", "image12"],
  image11: ["image11"],
  image12: ["image12"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  stage: "div";
  sectionMarketingHeadline: typeof SectionMarketingHeadline;
  navigation: typeof Navigation;
  headlineAndActions: "div";
  headline: "div";
  h1: "h1";
  textHighlight: "span";
  actions: "div";
  mainServiceAreas: "div";
  subline: "div";
  rectangle101: "div";
  highlyExperiencedIntegratedCapabilitiesAcross: "div";
  callsToAction: "div";
  arrow5: "div";
  introduction: "div";
  container: "div";
  header: "div";
  paragraph: "div";
  primaryCta: "div";
  label2: "div";
  arrow6: "div";
  people: "div";
  contain: "div";
  title: "div";
  _44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat: "div";
  primaryCta2: "div";
  label3: "div";
  arrow: "div";
  profilePics: "div";
  profilesColumn1: "div";
  teamItem: "div";
  picture: "div";
  teamItem2: "div";
  picture2: "div";
  teamItem3: "div";
  picture3: "div";
  teamItem4: "div";
  picture4: "div";
  profileColumn2: "div";
  teamItem5: "div";
  picture5: "div";
  teamItem6: "div";
  picture6: "div";
  teamItem7: "div";
  picture7: "div";
  teamItem8: "div";
  picture8: "div";
  profileColumn3: "div";
  teamItem9: "div";
  picture9: "div";
  teamItem10: "div";
  picture10: "div";
  teamItem11: "div";
  picture11: "div";
  teamItem12: "div";
  picture12: "div";
  profileColumn4: "div";
  teamItem13: "div";
  picture13: "div";
  teamItem14: "div";
  picture14: "div";
  teamItem15: "div";
  picture15: "div";
  teamItem16: "div";
  picture16: "div";
  ourWork: "div";
  weCreate: "div";
  workList: "div";
  listItem: "div";
  arrowSmall: "div";
  listItem2: "div";
  resortsWorldBirmingham: "div";
  listItem3: "div";
  resortsWorldBirmingham2: "div";
  listItem4: "div";
  resortsWorldBirmingham3: "div";
  listItem5: "div";
  resortsWorldBirmingham4: "div";
  caseStudies: "div";
  caseStudy: "div";
  overlay: "div";
  stats: "div";
  statistics: "div";
  label8: "div";
  descriptor: "div";
  descriptor2: "div";
  statistics2: "div";
  label9: "div";
  descriptor3: "div";
  descriptor4: "div";
  statistics3: "div";
  label10: "div";
  descriptor5: "div";
  descriptor6: "div";
  introduction2: "div";
  tags: "div";
  tagItem: "div";
  label4: "div";
  tagItem2: "div";
  label5: "div";
  tagItem3: "div";
  label6: "div";
  button: "div";
  label7: "div";
  moreWorkContact: "div";
  frame49: "div";
  primaryCta3: "div";
  label11: "div";
  arrow3: "div";
  frame50: "div";
  primaryCta4: "div";
  label12: "div";
  arrow2: "div";
  ourCustomers: "div";
  introduction3: "div";
  logoWall: "div";
  lakelandLeisureEstates: "div";
  resortsWorld: "div";
  introduction4: "div";
  container2: "div";
  paragraph3: "div";
  group57: "div";
  contact: "div";
  frame42: "div";
  teamItem17: "div";
  picture17: "div";
  frame61: "div";
  resortsWorld2: "div";
  paragraph2: "div";
  group58: "div";
  contact2: "div";
  frame43: "div";
  teamItem18: "div";
  picture18: "div";
  frame62: "div";
  awardsRecognition: "div";
  image13: "div";
  image151: "div";
  image161: "div";
  image141: "div";
  keyFigures: "div";
  row: "div";
  statistic: "div";
  label13: "div";
  descriptor9: "div";
  descriptor10: "div";
  statistic2: "div";
  label14: "div";
  descriptor11: "div";
  descriptor12: "div";
  statistic3: "div";
  label15: "div";
  descriptor13: "div";
  descriptor14: "div";
  statistic4: "div";
  label16: "div";
  descriptor7: "div";
  descriptor8: "div";
  doGood: "div";
  frame52: "div";
  image10: "div";
  frame54: "div";
  column1: "div";
  impactProject: "div";
  media: "div";
  placeholderImage: "div";
  dawnPrimary32PxImage: "div";
  description: "div";
  tags5: "div";
  impactProject2: "div";
  media2: "div";
  placeholderImage2: "div";
  dawnPrimary32PxImage2: "div";
  description2: "div";
  weSupportedRestoringAspen: "div";
  tags2: "div";
  january2022: "div";
  wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers: "div";
  column2: "div";
  impactProject3: "div";
  media3: "div";
  placeholderImage3: "div";
  dawnPrimary32PxImage3: "div";
  description3: "div";
  weSupportedRestoringAspen2: "div";
  tags3: "div";
  scotlandUk: "div";
  wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2: "div";
  impactProject4: "div";
  media4: "div";
  placeholderImage4: "div";
  dawnPrimary32PxImage4: "div";
  description4: "div";
  weSupportedRestoringAspen3: "div";
  tags4: "div";
  scotlandUk2: "div";
  january2023: "div";
  keyFigures2: "div";
  row2: "div";
  statistic5: "div";
  label17: "div";
  descriptor15: "div";
  descriptor16: "div";
  statistic6: "div";
  label18: "div";
  descriptor17: "div";
  descriptor18: "div";
  statistic7: "div";
  label19: "div";
  descriptor19: "div";
  descriptor20: "div";
  news: "div";
  frame55: "div";
  newsList: "div";
  newsItem: "div";
  newsTitle: "div";
  info: "div";
  author: "div";
  rectangle93: "div";
  tagItem6: "div";
  label20: "div";
  newsItem2: "div";
  newsTitle2: "div";
  info2: "div";
  author2: "div";
  rectangle94: "div";
  tagItem7: "div";
  label21: "div";
  newsItem3: "div";
  newsTitle3: "div";
  info3: "div";
  author3: "div";
  rectangle95: "div";
  tagItem8: "div";
  label22: "div";
  newsItem4: "div";
  newsTitle4: "div";
  info4: "div";
  author4: "div";
  rectangle96: "div";
  tagItem4: "div";
  label23: "div";
  newsItem5: "div";
  newsTitle5: "div";
  info5: "div";
  author5: "div";
  rectangle97: "div";
  tagItem5: "div";
  label24: "div";
  frame51: "div";
  primaryCta5: "div";
  label25: "div";
  arrow4: "div";
  newsletter: "div";
  dawnPrimary24PxArrow: "div";
  dawnPrimary24PxArrow2: "div";
  icon24PxArrow: "div";
  frame: "div";
  footer: "div";
  frame56: "div";
  frame57: "div";
  frame59: "div";
  frame58: "div";
  frame60: "div";
  frame63: "div";
  mainServiceAreas2: "div";
  subline6: "div";
  rectangle102: "div";
  callsToAction2: "div";
  linkWall: "div";
  divider: "div";
  frame48: "div";
  frame53: "div";
  frame64: "div";
  frame65: "div";
  influencerManagement: "div";
  frame66: "div";
  social: "div";
  end: "div";
  image11: "div";
  image12: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    stage: makeNodeComponent("stage"),
    sectionMarketingHeadline: makeNodeComponent("sectionMarketingHeadline"),
    navigation: makeNodeComponent("navigation"),
    headlineAndActions: makeNodeComponent("headlineAndActions"),
    headline: makeNodeComponent("headline"),
    h1: makeNodeComponent("h1"),
    textHighlight: makeNodeComponent("textHighlight"),
    actions: makeNodeComponent("actions"),
    mainServiceAreas: makeNodeComponent("mainServiceAreas"),
    subline: makeNodeComponent("subline"),
    rectangle101: makeNodeComponent("rectangle101"),
    highlyExperiencedIntegratedCapabilitiesAcross: makeNodeComponent(
      "highlyExperiencedIntegratedCapabilitiesAcross"
    ),
    callsToAction: makeNodeComponent("callsToAction"),
    arrow5: makeNodeComponent("arrow5"),
    introduction: makeNodeComponent("introduction"),
    container: makeNodeComponent("container"),
    header: makeNodeComponent("header"),
    paragraph: makeNodeComponent("paragraph"),
    primaryCta: makeNodeComponent("primaryCta"),
    label2: makeNodeComponent("label2"),
    arrow6: makeNodeComponent("arrow6"),
    people: makeNodeComponent("people"),
    contain: makeNodeComponent("contain"),
    title: makeNodeComponent("title"),
    _44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat:
      makeNodeComponent(
        "_44AndGrowingDiverseSpecialistsAndVibrantPersonalitiesTogetherMakeVerseGreat"
      ),
    primaryCta2: makeNodeComponent("primaryCta2"),
    label3: makeNodeComponent("label3"),
    arrow: makeNodeComponent("arrow"),
    profilePics: makeNodeComponent("profilePics"),
    profilesColumn1: makeNodeComponent("profilesColumn1"),
    teamItem: makeNodeComponent("teamItem"),
    picture: makeNodeComponent("picture"),
    teamItem2: makeNodeComponent("teamItem2"),
    picture2: makeNodeComponent("picture2"),
    teamItem3: makeNodeComponent("teamItem3"),
    picture3: makeNodeComponent("picture3"),
    teamItem4: makeNodeComponent("teamItem4"),
    picture4: makeNodeComponent("picture4"),
    profileColumn2: makeNodeComponent("profileColumn2"),
    teamItem5: makeNodeComponent("teamItem5"),
    picture5: makeNodeComponent("picture5"),
    teamItem6: makeNodeComponent("teamItem6"),
    picture6: makeNodeComponent("picture6"),
    teamItem7: makeNodeComponent("teamItem7"),
    picture7: makeNodeComponent("picture7"),
    teamItem8: makeNodeComponent("teamItem8"),
    picture8: makeNodeComponent("picture8"),
    profileColumn3: makeNodeComponent("profileColumn3"),
    teamItem9: makeNodeComponent("teamItem9"),
    picture9: makeNodeComponent("picture9"),
    teamItem10: makeNodeComponent("teamItem10"),
    picture10: makeNodeComponent("picture10"),
    teamItem11: makeNodeComponent("teamItem11"),
    picture11: makeNodeComponent("picture11"),
    teamItem12: makeNodeComponent("teamItem12"),
    picture12: makeNodeComponent("picture12"),
    profileColumn4: makeNodeComponent("profileColumn4"),
    teamItem13: makeNodeComponent("teamItem13"),
    picture13: makeNodeComponent("picture13"),
    teamItem14: makeNodeComponent("teamItem14"),
    picture14: makeNodeComponent("picture14"),
    teamItem15: makeNodeComponent("teamItem15"),
    picture15: makeNodeComponent("picture15"),
    teamItem16: makeNodeComponent("teamItem16"),
    picture16: makeNodeComponent("picture16"),
    ourWork: makeNodeComponent("ourWork"),
    weCreate: makeNodeComponent("weCreate"),
    workList: makeNodeComponent("workList"),
    listItem: makeNodeComponent("listItem"),
    arrowSmall: makeNodeComponent("arrowSmall"),
    listItem2: makeNodeComponent("listItem2"),
    resortsWorldBirmingham: makeNodeComponent("resortsWorldBirmingham"),
    listItem3: makeNodeComponent("listItem3"),
    resortsWorldBirmingham2: makeNodeComponent("resortsWorldBirmingham2"),
    listItem4: makeNodeComponent("listItem4"),
    resortsWorldBirmingham3: makeNodeComponent("resortsWorldBirmingham3"),
    listItem5: makeNodeComponent("listItem5"),
    resortsWorldBirmingham4: makeNodeComponent("resortsWorldBirmingham4"),
    caseStudies: makeNodeComponent("caseStudies"),
    caseStudy: makeNodeComponent("caseStudy"),
    overlay: makeNodeComponent("overlay"),
    stats: makeNodeComponent("stats"),
    statistics: makeNodeComponent("statistics"),
    label8: makeNodeComponent("label8"),
    descriptor: makeNodeComponent("descriptor"),
    descriptor2: makeNodeComponent("descriptor2"),
    statistics2: makeNodeComponent("statistics2"),
    label9: makeNodeComponent("label9"),
    descriptor3: makeNodeComponent("descriptor3"),
    descriptor4: makeNodeComponent("descriptor4"),
    statistics3: makeNodeComponent("statistics3"),
    label10: makeNodeComponent("label10"),
    descriptor5: makeNodeComponent("descriptor5"),
    descriptor6: makeNodeComponent("descriptor6"),
    introduction2: makeNodeComponent("introduction2"),
    tags: makeNodeComponent("tags"),
    tagItem: makeNodeComponent("tagItem"),
    label4: makeNodeComponent("label4"),
    tagItem2: makeNodeComponent("tagItem2"),
    label5: makeNodeComponent("label5"),
    tagItem3: makeNodeComponent("tagItem3"),
    label6: makeNodeComponent("label6"),
    button: makeNodeComponent("button"),
    label7: makeNodeComponent("label7"),
    moreWorkContact: makeNodeComponent("moreWorkContact"),
    frame49: makeNodeComponent("frame49"),
    primaryCta3: makeNodeComponent("primaryCta3"),
    label11: makeNodeComponent("label11"),
    arrow3: makeNodeComponent("arrow3"),
    frame50: makeNodeComponent("frame50"),
    primaryCta4: makeNodeComponent("primaryCta4"),
    label12: makeNodeComponent("label12"),
    arrow2: makeNodeComponent("arrow2"),
    ourCustomers: makeNodeComponent("ourCustomers"),
    introduction3: makeNodeComponent("introduction3"),
    logoWall: makeNodeComponent("logoWall"),
    lakelandLeisureEstates: makeNodeComponent("lakelandLeisureEstates"),
    resortsWorld: makeNodeComponent("resortsWorld"),
    introduction4: makeNodeComponent("introduction4"),
    container2: makeNodeComponent("container2"),
    paragraph3: makeNodeComponent("paragraph3"),
    group57: makeNodeComponent("group57"),
    contact: makeNodeComponent("contact"),
    frame42: makeNodeComponent("frame42"),
    teamItem17: makeNodeComponent("teamItem17"),
    picture17: makeNodeComponent("picture17"),
    frame61: makeNodeComponent("frame61"),
    resortsWorld2: makeNodeComponent("resortsWorld2"),
    paragraph2: makeNodeComponent("paragraph2"),
    group58: makeNodeComponent("group58"),
    contact2: makeNodeComponent("contact2"),
    frame43: makeNodeComponent("frame43"),
    teamItem18: makeNodeComponent("teamItem18"),
    picture18: makeNodeComponent("picture18"),
    frame62: makeNodeComponent("frame62"),
    awardsRecognition: makeNodeComponent("awardsRecognition"),
    image13: makeNodeComponent("image13"),
    image151: makeNodeComponent("image151"),
    image161: makeNodeComponent("image161"),
    image141: makeNodeComponent("image141"),
    keyFigures: makeNodeComponent("keyFigures"),
    row: makeNodeComponent("row"),
    statistic: makeNodeComponent("statistic"),
    label13: makeNodeComponent("label13"),
    descriptor9: makeNodeComponent("descriptor9"),
    descriptor10: makeNodeComponent("descriptor10"),
    statistic2: makeNodeComponent("statistic2"),
    label14: makeNodeComponent("label14"),
    descriptor11: makeNodeComponent("descriptor11"),
    descriptor12: makeNodeComponent("descriptor12"),
    statistic3: makeNodeComponent("statistic3"),
    label15: makeNodeComponent("label15"),
    descriptor13: makeNodeComponent("descriptor13"),
    descriptor14: makeNodeComponent("descriptor14"),
    statistic4: makeNodeComponent("statistic4"),
    label16: makeNodeComponent("label16"),
    descriptor7: makeNodeComponent("descriptor7"),
    descriptor8: makeNodeComponent("descriptor8"),
    doGood: makeNodeComponent("doGood"),
    frame52: makeNodeComponent("frame52"),
    image10: makeNodeComponent("image10"),
    frame54: makeNodeComponent("frame54"),
    column1: makeNodeComponent("column1"),
    impactProject: makeNodeComponent("impactProject"),
    media: makeNodeComponent("media"),
    placeholderImage: makeNodeComponent("placeholderImage"),
    dawnPrimary32PxImage: makeNodeComponent("dawnPrimary32PxImage"),
    description: makeNodeComponent("description"),
    tags5: makeNodeComponent("tags5"),
    impactProject2: makeNodeComponent("impactProject2"),
    media2: makeNodeComponent("media2"),
    placeholderImage2: makeNodeComponent("placeholderImage2"),
    dawnPrimary32PxImage2: makeNodeComponent("dawnPrimary32PxImage2"),
    description2: makeNodeComponent("description2"),
    weSupportedRestoringAspen: makeNodeComponent("weSupportedRestoringAspen"),
    tags2: makeNodeComponent("tags2"),
    january2022: makeNodeComponent("january2022"),
    wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers:
      makeNodeComponent(
        "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers"
      ),
    column2: makeNodeComponent("column2"),
    impactProject3: makeNodeComponent("impactProject3"),
    media3: makeNodeComponent("media3"),
    placeholderImage3: makeNodeComponent("placeholderImage3"),
    dawnPrimary32PxImage3: makeNodeComponent("dawnPrimary32PxImage3"),
    description3: makeNodeComponent("description3"),
    weSupportedRestoringAspen2: makeNodeComponent("weSupportedRestoringAspen2"),
    tags3: makeNodeComponent("tags3"),
    scotlandUk: makeNodeComponent("scotlandUk"),
    wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2:
      makeNodeComponent(
        "wePlantedAnAspenSaplingForEachOfOurTalentedTeamToRestoreThisRareKeystoneSpeciesToTheScottishLandscapeTheSpeciesIsImportantForAWealthOfSpeciesAndIsAValuableRiparianSpeciesHelpingToRestoreTheHealthOfScotlandsRivers2"
      ),
    impactProject4: makeNodeComponent("impactProject4"),
    media4: makeNodeComponent("media4"),
    placeholderImage4: makeNodeComponent("placeholderImage4"),
    dawnPrimary32PxImage4: makeNodeComponent("dawnPrimary32PxImage4"),
    description4: makeNodeComponent("description4"),
    weSupportedRestoringAspen3: makeNodeComponent("weSupportedRestoringAspen3"),
    tags4: makeNodeComponent("tags4"),
    scotlandUk2: makeNodeComponent("scotlandUk2"),
    january2023: makeNodeComponent("january2023"),
    keyFigures2: makeNodeComponent("keyFigures2"),
    row2: makeNodeComponent("row2"),
    statistic5: makeNodeComponent("statistic5"),
    label17: makeNodeComponent("label17"),
    descriptor15: makeNodeComponent("descriptor15"),
    descriptor16: makeNodeComponent("descriptor16"),
    statistic6: makeNodeComponent("statistic6"),
    label18: makeNodeComponent("label18"),
    descriptor17: makeNodeComponent("descriptor17"),
    descriptor18: makeNodeComponent("descriptor18"),
    statistic7: makeNodeComponent("statistic7"),
    label19: makeNodeComponent("label19"),
    descriptor19: makeNodeComponent("descriptor19"),
    descriptor20: makeNodeComponent("descriptor20"),
    news: makeNodeComponent("news"),
    frame55: makeNodeComponent("frame55"),
    newsList: makeNodeComponent("newsList"),
    newsItem: makeNodeComponent("newsItem"),
    newsTitle: makeNodeComponent("newsTitle"),
    info: makeNodeComponent("info"),
    author: makeNodeComponent("author"),
    rectangle93: makeNodeComponent("rectangle93"),
    tagItem6: makeNodeComponent("tagItem6"),
    label20: makeNodeComponent("label20"),
    newsItem2: makeNodeComponent("newsItem2"),
    newsTitle2: makeNodeComponent("newsTitle2"),
    info2: makeNodeComponent("info2"),
    author2: makeNodeComponent("author2"),
    rectangle94: makeNodeComponent("rectangle94"),
    tagItem7: makeNodeComponent("tagItem7"),
    label21: makeNodeComponent("label21"),
    newsItem3: makeNodeComponent("newsItem3"),
    newsTitle3: makeNodeComponent("newsTitle3"),
    info3: makeNodeComponent("info3"),
    author3: makeNodeComponent("author3"),
    rectangle95: makeNodeComponent("rectangle95"),
    tagItem8: makeNodeComponent("tagItem8"),
    label22: makeNodeComponent("label22"),
    newsItem4: makeNodeComponent("newsItem4"),
    newsTitle4: makeNodeComponent("newsTitle4"),
    info4: makeNodeComponent("info4"),
    author4: makeNodeComponent("author4"),
    rectangle96: makeNodeComponent("rectangle96"),
    tagItem4: makeNodeComponent("tagItem4"),
    label23: makeNodeComponent("label23"),
    newsItem5: makeNodeComponent("newsItem5"),
    newsTitle5: makeNodeComponent("newsTitle5"),
    info5: makeNodeComponent("info5"),
    author5: makeNodeComponent("author5"),
    rectangle97: makeNodeComponent("rectangle97"),
    tagItem5: makeNodeComponent("tagItem5"),
    label24: makeNodeComponent("label24"),
    frame51: makeNodeComponent("frame51"),
    primaryCta5: makeNodeComponent("primaryCta5"),
    label25: makeNodeComponent("label25"),
    arrow4: makeNodeComponent("arrow4"),
    newsletter: makeNodeComponent("newsletter"),
    dawnPrimary24PxArrow: makeNodeComponent("dawnPrimary24PxArrow"),
    dawnPrimary24PxArrow2: makeNodeComponent("dawnPrimary24PxArrow2"),
    icon24PxArrow: makeNodeComponent("icon24PxArrow"),
    frame: makeNodeComponent("frame"),
    footer: makeNodeComponent("footer"),
    frame56: makeNodeComponent("frame56"),
    frame57: makeNodeComponent("frame57"),
    frame59: makeNodeComponent("frame59"),
    frame58: makeNodeComponent("frame58"),
    frame60: makeNodeComponent("frame60"),
    frame63: makeNodeComponent("frame63"),
    mainServiceAreas2: makeNodeComponent("mainServiceAreas2"),
    subline6: makeNodeComponent("subline6"),
    rectangle102: makeNodeComponent("rectangle102"),
    callsToAction2: makeNodeComponent("callsToAction2"),
    linkWall: makeNodeComponent("linkWall"),
    divider: makeNodeComponent("divider"),
    frame48: makeNodeComponent("frame48"),
    frame53: makeNodeComponent("frame53"),
    frame64: makeNodeComponent("frame64"),
    frame65: makeNodeComponent("frame65"),
    influencerManagement: makeNodeComponent("influencerManagement"),
    frame66: makeNodeComponent("frame66"),
    social: makeNodeComponent("social"),
    end: makeNodeComponent("end"),
    image11: makeNodeComponent("image11"),
    image12: makeNodeComponent("image12"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
